

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:19:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0014                     _SSPCON	set	20
   286  0008                     _PORTD	set	8
   287  0005                     _PORTA	set	5
   288  0007                     _PORTC	set	7
   289  0009                     _PORTE	set	9
   290  0006                     _PORTBbits	set	6
   291  0013                     _SSPBUF	set	19
   292  000C                     _PIR1bits	set	12
   293  0063                     _SSPIF	set	99
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  0085                     _TRISAbits	set	133
   297  0088                     _TRISD	set	136
   298  0085                     _TRISA	set	133
   299  0087                     _TRISC	set	135
   300  0089                     _TRISE	set	137
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   316  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   317  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   318  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   319  0015                     end_of_initialization:	
   320                           ;End of C runtime variable initialization code
   321                           
   322  0015                     __end_of__initialization:
   323  0015  0183               	clrf	3
   324  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMMON
   327  0070                     __pbssCOMMON:
   328  0070                     _cont1:
   329  0070                     	ds	2
   330  0072                     _ban_2:
   331  0072                     	ds	2
   332  0074                     _ban_1:
   333  0074                     	ds	2
   334                           
   335                           	psect	cstackCOMMON
   336  0076                     __pcstackCOMMON:
   337  0076                     ?_setup:
   338  0076                     ?_avanza_1:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0076                     ?_fin:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0076                     ?_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0076                     ??_isr:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0076                     ?_main:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 1 bytes @ 0x0
   355  0076                     	ds	2
   356  0078                     ??_avanza_1:
   357  0078                     ??_fin:	
   358                           ; 1 bytes @ 0x2
   359                           
   360  0078                     ?_spiInit:	
   361                           ; 1 bytes @ 0x2
   362                           
   363  0078                     spiInit@sDataSample:	
   364                           ; 1 bytes @ 0x2
   365                           
   366                           
   367                           ; 1 bytes @ 0x2
   368  0078                     	ds	1
   369  0079                     spiInit@sClockIdle:
   370                           
   371                           ; 1 bytes @ 0x3
   372  0079                     	ds	1
   373  007A                     spiInit@sTransmitEdge:
   374                           
   375                           ; 1 bytes @ 0x4
   376  007A                     	ds	1
   377  007B                     ??_spiInit:
   378  007B                     spiInit@sType:	
   379                           ; 1 bytes @ 0x5
   380                           
   381                           
   382                           ; 1 bytes @ 0x5
   383  007B                     	ds	1
   384  007C                     ??_setup:
   385  007C                     ??_main:	
   386                           ; 1 bytes @ 0x6
   387                           
   388                           
   389                           	psect	maintext
   390  0019                     __pmaintext:	
   391                           ; 1 bytes @ 0x6
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 54 in file "es2.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : B00/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0
   414 ;;      Totals:         0       0       0       0       0
   415 ;;Total ram usage:        0 bytes
   416 ;; Hardware stack levels required when called:    3
   417 ;; This function calls:
   418 ;;		_avanza_1
   419 ;;		_fin
   420 ;;		_setup
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  0019                     _main:
   429  0019                     l796:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   432                           
   433                           
   434                           ;es2.c: 56:         fin();
   435  0019  120A  118A  2062  120A  118A  	fcall	_setup
   436  001E                     l798:
   437                           
   438                           ;es2.c: 65: 
   439  001E  1283               	bcf	3,5	;RP0=0, select bank0
   440  001F  1303               	bcf	3,6	;RP1=0, select bank0
   441  0020  1886               	btfsc	6,1	;volatile
   442  0021  2823               	goto	u121
   443  0022  2824               	goto	u120
   444  0023                     u121:
   445  0023  2828               	goto	l802
   446  0024                     u120:
   447  0024                     l800:
   448                           
   449                           ;es2.c: 66: void setup(void) {
   450  0024  3001               	movlw	1
   451  0025  00F4               	movwf	_ban_1
   452  0026  3000               	movlw	0
   453  0027  00F5               	movwf	_ban_1+1
   454  0028                     l802:
   455                           
   456                           ;es2.c: 68:     PORTE = 0;
   457  0028  1C86               	btfss	6,1	;volatile
   458  0029  282B               	goto	u131
   459  002A  282C               	goto	u130
   460  002B                     u131:
   461  002B  283A               	goto	l810
   462  002C                     u130:
   463  002C                     l804:
   464  002C  0374               	decf	_ban_1,w
   465  002D  0475               	iorwf	_ban_1+1,w
   466  002E  1D03               	btfss	3,2
   467  002F  2831               	goto	u141
   468  0030  2832               	goto	u140
   469  0031                     u141:
   470  0031  283A               	goto	l810
   471  0032                     u140:
   472  0032                     l806:
   473                           
   474                           ;es2.c: 69:     TRISC = 0;
   475  0032  01F4               	clrf	_ban_1
   476  0033  01F5               	clrf	_ban_1+1
   477  0034                     l808:
   478                           
   479                           ;es2.c: 70:     PORTC = 0;
   480  0034  3001               	movlw	1
   481  0035  07F0               	addwf	_cont1,f
   482  0036  1803               	skipnc
   483  0037  0AF1               	incf	_cont1+1,f
   484  0038  3000               	movlw	0
   485  0039  07F1               	addwf	_cont1+1,f
   486  003A                     l810:
   487                           
   488                           ;es2.c: 73:     TRISD = 0;
   489  003A  1906               	btfsc	6,2	;volatile
   490  003B  283D               	goto	u151
   491  003C  283E               	goto	u150
   492  003D                     u151:
   493  003D  2842               	goto	l814
   494  003E                     u150:
   495  003E                     l812:
   496                           
   497                           ;es2.c: 74:     PORTD = 0;
   498  003E  3001               	movlw	1
   499  003F  00F2               	movwf	_ban_2
   500  0040  3000               	movlw	0
   501  0041  00F3               	movwf	_ban_2+1
   502  0042                     l814:
   503                           
   504                           ;es2.c: 76:     ANSELH = 0;
   505  0042  1D06               	btfss	6,2	;volatile
   506  0043  2845               	goto	u161
   507  0044  2846               	goto	u160
   508  0045                     u161:
   509  0045  2854               	goto	l822
   510  0046                     u160:
   511  0046                     l816:
   512  0046  0372               	decf	_ban_2,w
   513  0047  0473               	iorwf	_ban_2+1,w
   514  0048  1D03               	btfss	3,2
   515  0049  284B               	goto	u171
   516  004A  284C               	goto	u170
   517  004B                     u171:
   518  004B  2854               	goto	l822
   519  004C                     u170:
   520  004C                     l818:
   521                           
   522                           ;es2.c: 77:     PORTBbits.RB0 = 1;
   523  004C  01F2               	clrf	_ban_2
   524  004D  01F3               	clrf	_ban_2+1
   525  004E                     l820:
   526                           
   527                           ;es2.c: 78:     PORTBbits.RB1 = 1;
   528  004E  30FF               	movlw	255
   529  004F  07F0               	addwf	_cont1,f
   530  0050  1803               	skipnc
   531  0051  0AF1               	incf	_cont1+1,f
   532  0052  30FF               	movlw	255
   533  0053  07F1               	addwf	_cont1+1,f
   534  0054                     l822:
   535                           
   536                           ;es2.c: 81: }
   537  0054  120A  118A  20C5  120A  118A  	fcall	_avanza_1
   538  0059                     l824:
   539                           
   540                           ;es2.c: 82: 
   541  0059  120A  118A  20A5  120A  118A  	fcall	_fin
   542  005E  281E               	goto	l798
   543  005F  120A  118A  280C   	ljmp	start
   544  0062                     __end_of_main:
   545                           
   546                           	psect	text1
   547  0062                     __ptext1:	
   548 ;; *************** function _setup *****************
   549 ;; Defined at:
   550 ;;		line 92 in file "es2.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		_spiInit
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _setup
   580  0062                     _setup:
   581  0062                     l786:	
   582                           ;incstack = 0
   583                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;es2.c: 93:         cont1 = 0;
   587  0062  1683               	bsf	3,5	;RP0=1, select bank1
   588  0063  1303               	bcf	3,6	;RP1=0, select bank1
   589  0064  0189               	clrf	9	;volatile
   590                           
   591                           ;es2.c: 94:     }
   592  0065  1283               	bcf	3,5	;RP0=0, select bank0
   593  0066  1303               	bcf	3,6	;RP1=0, select bank0
   594  0067  0189               	clrf	9	;volatile
   595                           
   596                           ;es2.c: 95: }
   597  0068  1683               	bsf	3,5	;RP0=1, select bank1
   598  0069  1303               	bcf	3,6	;RP1=0, select bank1
   599  006A  0187               	clrf	7	;volatile
   600  006B  1283               	bcf	3,5	;RP0=0, select bank0
   601  006C  1303               	bcf	3,6	;RP1=0, select bank0
   602  006D  0187               	clrf	7	;volatile
   603  006E  1683               	bsf	3,5	;RP0=1, select bank1
   604  006F  1303               	bcf	3,6	;RP1=0, select bank1
   605  0070  0185               	clrf	5	;volatile
   606  0071  1283               	bcf	3,5	;RP0=0, select bank0
   607  0072  1303               	bcf	3,6	;RP1=0, select bank0
   608  0073  0185               	clrf	5	;volatile
   609  0074  1683               	bsf	3,5	;RP0=1, select bank1
   610  0075  1303               	bcf	3,6	;RP1=0, select bank1
   611  0076  0188               	clrf	8	;volatile
   612  0077  1283               	bcf	3,5	;RP0=0, select bank0
   613  0078  1303               	bcf	3,6	;RP1=0, select bank0
   614  0079  0188               	clrf	8	;volatile
   615  007A  1683               	bsf	3,5	;RP0=1, select bank3
   616  007B  1703               	bsf	3,6	;RP1=1, select bank3
   617  007C  0188               	clrf	8	;volatile
   618  007D  0189               	clrf	9	;volatile
   619  007E                     l788:
   620  007E  1283               	bcf	3,5	;RP0=0, select bank0
   621  007F  1303               	bcf	3,6	;RP1=0, select bank0
   622  0080  1406               	bsf	6,0	;volatile
   623  0081                     l790:
   624  0081  1486               	bsf	6,1	;volatile
   625  0082                     l792:
   626  0082  1683               	bsf	3,5	;RP0=1, select bank1
   627  0083  1303               	bcf	3,6	;RP1=0, select bank1
   628  0084  1685               	bsf	5,5	;volatile
   629  0085                     l794:
   630  0085  01F8               	clrf	spiInit@sDataSample
   631  0086  01F9               	clrf	spiInit@sClockIdle
   632  0087  01FA               	clrf	spiInit@sTransmitEdge
   633  0088  3025               	movlw	37
   634  0089  120A  118A  208F  120A  118A  	fcall	_spiInit
   635  008E                     l65:
   636  008E  0008               	return
   637  008F                     __end_of_setup:
   638                           
   639                           	psect	text2
   640  008F                     __ptext2:	
   641 ;; *************** function _spiInit *****************
   642 ;; Defined at:
   643 ;;		line 3 in file "SPIe2.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  sType           1    wreg     enum E1264
   646 ;;  sDataSample     1    2[COMMON] enum E1272
   647 ;;  sClockIdle      1    3[COMMON] enum E1276
   648 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  sType           1    5[COMMON] enum E1264
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         3       0       0       0       0
   661 ;;      Locals:         1       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         4       0       0       0       0
   664 ;;Total ram usage:        4 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_setup
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _spiInit
   676  008F                     _spiInit:
   677                           
   678                           ;incstack = 0
   679                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   680                           ;spiInit@sType stored from wreg
   681  008F  00FB               	movwf	spiInit@sType
   682  0090                     l776:
   683                           
   684                           ;SPIe2.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIe2.c: 4: {;SPIe2.c: 5:     TRISC5 = 0;
   685  0090  1683               	bsf	3,5	;RP0=1, select bank1
   686  0091  1303               	bcf	3,6	;RP1=0, select bank1
   687  0092  1287               	bcf	7,5	;volatile
   688                           
   689                           ;SPIe2.c: 6:     if(sType & 0b00000100)
   690  0093  1D7B               	btfss	spiInit@sType,2
   691  0094  2896               	goto	u111
   692  0095  2897               	goto	u110
   693  0096                     u111:
   694  0096  289B               	goto	l782
   695  0097                     u110:
   696  0097                     l778:
   697                           
   698                           ;SPIe2.c: 7:     {;SPIe2.c: 8:         SSPSTAT = sTransmitEdge;
   699  0097  087A               	movf	spiInit@sTransmitEdge,w
   700  0098  0094               	movwf	20	;volatile
   701  0099                     l780:
   702                           
   703                           ;SPIe2.c: 9:         TRISC3 = 1;
   704  0099  1587               	bsf	7,3	;volatile
   705                           
   706                           ;SPIe2.c: 10:     }
   707  009A  289F               	goto	l88
   708  009B                     l782:
   709                           
   710                           ;SPIe2.c: 12:     {;SPIe2.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
   711  009B  0878               	movf	spiInit@sDataSample,w
   712  009C  047A               	iorwf	spiInit@sTransmitEdge,w
   713  009D  0094               	movwf	20	;volatile
   714  009E                     l784:
   715                           
   716                           ;SPIe2.c: 14:         TRISC3 = 0;
   717  009E  1187               	bcf	7,3	;volatile
   718  009F                     l88:	
   719                           ;SPIe2.c: 15:     }
   720                           
   721                           
   722                           ;SPIe2.c: 17:     SSPCON = sType | sClockIdle;
   723  009F  087B               	movf	spiInit@sType,w
   724  00A0  0479               	iorwf	spiInit@sClockIdle,w
   725  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   726  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   727  00A3  0094               	movwf	20	;volatile
   728  00A4                     l89:
   729  00A4  0008               	return
   730  00A5                     __end_of_spiInit:
   731                           
   732                           	psect	text3
   733  00A5                     __ptext3:	
   734 ;; *************** function _fin *****************
   735 ;; Defined at:
   736 ;;		line 117 in file "es2.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, btemp+1
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0
   753 ;;      Totals:         0       0       0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    1
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _fin
   766  00A5                     _fin:
   767  00A5                     l720:	
   768                           ;incstack = 0
   769                           ; Regs used in _fin: [wreg+status,2+btemp+1]
   770                           
   771  00A5  0871               	movf	_cont1+1,w
   772  00A6  3A80               	xorlw	128
   773  00A7  00FF               	movwf	btemp+1
   774  00A8  3080               	movlw	128
   775  00A9  027F               	subwf	btemp+1,w
   776  00AA  1D03               	skipz
   777  00AB  28AE               	goto	u25
   778  00AC  30FF               	movlw	255
   779  00AD  0270               	subwf	_cont1,w
   780  00AE                     u25:
   781  00AE  1C03               	skipc
   782  00AF  28B1               	goto	u21
   783  00B0  28B2               	goto	u20
   784  00B1                     u21:
   785  00B1  28B4               	goto	l72
   786  00B2                     u20:
   787  00B2                     l722:
   788  00B2  01F0               	clrf	_cont1
   789  00B3  01F1               	clrf	_cont1+1
   790  00B4                     l72:
   791  00B4  0008               	return
   792  00B5                     __end_of_fin:
   793                           
   794                           	psect	text4
   795  00C5                     __ptext4:	
   796 ;; *************** function _avanza_1 *****************
   797 ;; Defined at:
   798 ;;		line 113 in file "es2.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _avanza_1
   828  00C5                     _avanza_1:
   829  00C5                     l718:	
   830                           ;incstack = 0
   831                           ; Regs used in _avanza_1: [wreg]
   832                           
   833  00C5  0870               	movf	_cont1,w
   834  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   835  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   836  00C8  0088               	movwf	8	;volatile
   837  00C9                     l68:
   838  00C9  0008               	return
   839  00CA                     __end_of_avanza_1:
   840                           
   841                           	psect	text5
   842  00B5                     __ptext5:	
   843 ;; *************** function _isr *****************
   844 ;; Defined at:
   845 ;;		line 44 in file "es2.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          2       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		Interrupt level 1
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _isr
   874  00B5                     _isr:
   875  00B5                     i1l726:
   876                           
   877                           ;es2.c: 45:         }
   878  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   879  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   880  00B7  1D8C               	btfss	12,3	;volatile
   881  00B8  28BA               	goto	u4_21
   882  00B9  28BB               	goto	u4_20
   883  00BA                     u4_21:
   884  00BA  28BE               	goto	i1l50
   885  00BB                     u4_20:
   886  00BB                     i1l728:
   887                           
   888                           ;es2.c: 46: 
   889  00BB  0870               	movf	_cont1,w
   890  00BC  0093               	movwf	19	;volatile
   891  00BD                     i1l730:
   892                           
   893                           ;es2.c: 47:         if (PORTBbits.RB2 == 0) {
   894  00BD  118C               	bcf	12,3	;volatile
   895  00BE                     i1l50:
   896  00BE  0877               	movf	??_isr+1,w
   897  00BF  008A               	movwf	10
   898  00C0  0E76               	swapf	??_isr,w
   899  00C1  0083               	movwf	3
   900  00C2  0EFE               	swapf	btemp,f
   901  00C3  0E7E               	swapf	btemp,w
   902  00C4  0009               	retfie
   903  00C5                     __end_of_isr:
   904  007E                     btemp	set	126	;btemp
   905  007E                     wtemp0	set	126
   906                           
   907                           	psect	intentry
   908  0004                     __pintentry:	
   909                           ;incstack = 0
   910                           ; Regs used in _isr: [wreg]
   911                           
   912  0004                     interrupt_function:
   913  007E                     saved_w	set	btemp
   914  0004  00FE               	movwf	btemp
   915  0005  0E03               	swapf	3,w
   916  0006  00F6               	movwf	??_isr
   917  0007  080A               	movf	10,w
   918  0008  00F7               	movwf	??_isr+1
   919  0009  120A  118A  28B5   	ljmp	_isr
   920                           
   921                           	psect	config
   922                           
   923                           ;Config register CONFIG1 @ 0x2007
   924                           ;	Oscillator Selection bits
   925                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   926                           ;	Watchdog Timer Enable bit
   927                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   928                           ;	Power-up Timer Enable bit
   929                           ;	PWRTE = OFF, PWRT disabled
   930                           ;	RE3/MCLR pin function select bit
   931                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   932                           ;	Code Protection bit
   933                           ;	CP = OFF, Program memory code protection is disabled
   934                           ;	Data Code Protection bit
   935                           ;	CPD = OFF, Data memory code protection is disabled
   936                           ;	Brown Out Reset Selection bits
   937                           ;	BOREN = OFF, BOR disabled
   938                           ;	Internal External Switchover bit
   939                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   940                           ;	Fail-Safe Clock Monitor Enabled bit
   941                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   942                           ;	Low Voltage Programming Enable bit
   943                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   944                           ;	In-Circuit Debugger Mode bit
   945                           ;	DEBUG = 0x1, unprogrammed default
   946  2007                     	org	8199
   947  2007  20D1               	dw	8401
   948                           
   949                           ;Config register CONFIG2 @ 0x2008
   950                           ;	Brown-out Reset Selection bit
   951                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   952                           ;	Flash Program Memory Self Write Enable bits
   953                           ;	WRT = OFF, Write protection off
   954  2008                     	org	8200
   955  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                           _avanza_1
                                _fin
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _fin                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _avanza_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _avanza_1
   _fin
   _setup
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:19:25 2021

            _SSPSTATbits 0094                       l72 00B4                       l65 008E  
                     l68 00C9                       l88 009F                       l89 00A4  
                     u20 00B2                       u21 00B1                       u25 00AE  
                    l720 00A5                      l800 0024                      l722 00B2  
                    l810 003A                      l802 0028                      l820 004E  
                    l812 003E                      l804 002C                      l718 00C5  
                    l822 0054                      l814 0042                      l806 0032  
                    l824 0059                      l816 0046                      l808 0034  
                    l818 004C                      l780 0099                      l782 009B  
                    l790 0081                      l784 009E                      l776 0090  
                    l792 0082                      l778 0097                      l794 0085  
                    l786 0062                      l788 007E                      l796 0019  
                    l798 001E                      u110 0097                      u111 0096  
                    u120 0024                      u121 0023                      u130 002C  
                    u131 002B                      u140 0032                      u141 0031  
                    u150 003E                      u151 003D                      u160 0046  
                    u161 0045                      u170 004C                      u171 004B  
                    _fin 00A5                      _isr 00B5                     ?_fin 0076  
                   ?_isr 0076                     i1l50 00BE                     u4_20 00BB  
                   u4_21 00BA                     _main 0019                     btemp 007E  
                   start 000C                    ??_fin 0078                    ??_isr 0076  
                  ?_main 0076                    _ANSEL 0188                    i1l730 00BD  
                  i1l726 00B5                    i1l728 00BB                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _SSPIF 0063                    _ban_1 0074  
                  _ban_2 0072                    _cont1 0070                    _setup 0062  
                  pclath 000A          __end_of_spiInit 00A5                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0062  
                 ??_main 007C                   ?_setup 0076                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPBUF 0013  
                 _SSPCON 0014         __end_of_avanza_1 00CA                   saved_w 007E  
              ??_spiInit 007B  __end_of__initialization 0015           __pcstackCOMMON 0076  
          __end_of_setup 008F                  ??_setup 007C               __pmaintext 0019  
             __pintentry 0004                ?_avanza_1 0076                  _SSPSTAT 0094  
                __ptext1 0062                  __ptext2 008F                  __ptext3 00A5  
                __ptext4 00C5                  __ptext5 00B5             __size_of_fin 0010  
           __size_of_isr 0010                  _spiInit 008F               ??_avanza_1 0078  
   end_of_initialization 0015                _PORTBbits 0006                _TRISAbits 0085  
    start_initialization 000F              __end_of_fin 00B5              __end_of_isr 00C5  
            __pbssCOMMON 0070                ___latbits 0002        __size_of_avanza_1 0005  
               ?_spiInit 0078           __size_of_setup 002D     spiInit@sTransmitEdge 007A  
      interrupt_function 0004       spiInit@sDataSample 0078                 _PIR1bits 000C  
       __size_of_spiInit 0016                 _avanza_1 00C5            __size_of_main 0049  
           spiInit@sType 007B        spiInit@sClockIdle 0079                 intlevel1 0000  

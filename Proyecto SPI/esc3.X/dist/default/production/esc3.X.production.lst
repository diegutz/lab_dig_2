

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:22:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	idataBANK0
   294  0283                     __pidataBANK0:
   295                           
   296                           ;initializer for _temp
   297  0283  3430               	retlw	48
   298  0284  3430               	retlw	48
   299  0285  342E               	retlw	46
   300  0286  3430               	retlw	48
   301  0287  3400               	retlw	0
   302  0014                     _SSPCON	set	20
   303  0001                     _TMR0	set	1
   304  000B                     _INTCONbits	set	11
   305  0009                     _PORTE	set	9
   306  0008                     _PORTD	set	8
   307  0007                     _PORTC	set	7
   308  0006                     _PORTB	set	6
   309  0005                     _PORTA	set	5
   310  001E                     _ADRESH	set	30
   311  001F                     _ADCON0bits	set	31
   312  0013                     _SSPBUF	set	19
   313  000C                     _PIR1bits	set	12
   314  0063                     _SSPIF	set	99
   315  0094                     _SSPSTATbits	set	148
   316  0094                     _SSPSTAT	set	148
   317  0085                     _TRISAbits	set	133
   318  008C                     _PIE1bits	set	140
   319  009F                     _ADCON1bits	set	159
   320  0081                     _OPTION_REGbits	set	129
   321  008F                     _OSCCON	set	143
   322  0096                     _IOCB	set	150
   323  0089                     _TRISE	set	137
   324  0088                     _TRISD	set	136
   325  0087                     _TRISC	set	135
   326  0086                     _TRISB	set	134
   327  0085                     _TRISA	set	133
   328  043B                     _TRISC3	set	1083
   329  043D                     _TRISC5	set	1085
   330  0189                     _ANSELHbits	set	393
   331  0189                     _ANSELH	set	393
   332  0188                     _ANSEL	set	392
   333                           
   334                           	psect	cinit
   335  000F                     start_initialization:	
   336                           ; #config settings
   337                           
   338  000F                     __initialization:
   339                           
   340                           ; Initialize objects allocated to BANK0
   341  000F  120A  118A  2283  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   342  0014  00C5               	movwf	__pdataBANK0& (0+127)
   343  0015  120A  118A  2284  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   344  001A  00C6               	movwf	(__pdataBANK0+1)& (0+127)
   345  001B  120A  118A  2285  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   346  0020  00C7               	movwf	(__pdataBANK0+2)& (0+127)
   347  0021  120A  118A  2286  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   348  0026  00C8               	movwf	(__pdataBANK0+3)& (0+127)
   349  0027  120A  118A  2287  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   350  002C  00C9               	movwf	(__pdataBANK0+4)& (0+127)
   351                           
   352                           ; Clear objects allocated to BANK0
   353  002D  1383               	bcf	3,7	;select IRP bank0
   354  002E  3035               	movlw	low __pbssBANK0
   355  002F  0084               	movwf	4
   356  0030  3045               	movlw	low (__pbssBANK0+16)
   357  0031  120A  118A  2274  120A  118A  	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to COMMON
   360  0036  01FB               	clrf	__pbssCOMMON& (0+127)
   361  0037                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  0037                     __end_of__initialization:
   365  0037  0183               	clrf	3
   366  0038  120A  118A  2A50   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	bssCOMMON
   369  007B                     __pbssCOMMON:
   370  007B                     _adc_flag:
   371  007B                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  0035                     __pbssBANK0:
   375  0035                     _str_pot_d:
   376  0035                     	ds	12
   377  0041                     _adc_data1:
   378  0041                     	ds	4
   379                           
   380                           	psect	dataBANK0
   381  0045                     __pdataBANK0:
   382  0045                     _temp:
   383  0045                     	ds	5
   384                           
   385                           	psect	clrtext
   386  0274                     clear_ram0:	
   387                           ;	Called with FSR containing the base address, and
   388                           ;	W with the last address+1
   389                           
   390  0274  0064               	clrwdt	;clear the watchdog before getting into this loop
   391  0275                     clrloop0:
   392  0275  0180               	clrf	0	;clear RAM location pointed to by FSR
   393  0276  0A84               	incf	4,f	;increment pointer
   394  0277  0604               	xorwf	4,w	;XOR with final address
   395  0278  1903               	btfsc	3,2	;have we reached the end yet?
   396  0279  3400               	retlw	0	;all done for this memory range, return
   397  027A  0604               	xorwf	4,w	;XOR again to restore value
   398  027B  2A75               	goto	clrloop0	;do the next byte
   399                           
   400                           	psect	cstackCOMMON
   401  0070                     __pcstackCOMMON:
   402  0070                     ?_setup:
   403  0070                     ?_ADC_1:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_isr:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ??_isr:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_canal_12:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 1 bytes @ 0x0
   420  0070                     	ds	2
   421  0072                     ?_spiInit:
   422  0072                     ??_canal_12:	
   423                           ; 1 bytes @ 0x2
   424                           
   425  0072                     ?___aldiv:	
   426                           ; 1 bytes @ 0x2
   427                           
   428  0072                     spiInit@sDataSample:	
   429                           ; 4 bytes @ 0x2
   430                           
   431  0072                     ___aldiv@divisor:	
   432                           ; 1 bytes @ 0x2
   433                           
   434                           
   435                           ; 4 bytes @ 0x2
   436  0072                     	ds	1
   437  0073                     spiInit@sClockIdle:
   438                           
   439                           ; 1 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     spiInit@sTransmitEdge:
   442                           
   443                           ; 1 bytes @ 0x4
   444  0074                     	ds	1
   445  0075                     ??_spiInit:
   446  0075                     spiInit@sType:	
   447                           ; 1 bytes @ 0x5
   448                           
   449                           
   450                           ; 1 bytes @ 0x5
   451  0075                     	ds	1
   452  0076                     ??_setup:
   453  0076                     ___aldiv@dividend:	
   454                           ; 1 bytes @ 0x6
   455                           
   456                           
   457                           ; 4 bytes @ 0x6
   458  0076                     	ds	4
   459  007A                     ??___aldiv:
   460                           
   461                           ; 1 bytes @ 0xA
   462  007A                     	ds	1
   463  007B                     ??_main:
   464                           
   465                           	psect	cstackBANK0
   466  0020                     __pcstackBANK0:	
   467                           ; 1 bytes @ 0xB
   468                           
   469  0020                     ___aldiv@counter:
   470                           
   471                           ; 1 bytes @ 0x0
   472  0020                     	ds	1
   473  0021                     ___aldiv@sign:
   474                           
   475                           ; 1 bytes @ 0x1
   476  0021                     	ds	1
   477  0022                     ___aldiv@quotient:
   478                           
   479                           ; 4 bytes @ 0x2
   480  0022                     	ds	4
   481  0026                     ?___almod:
   482  0026                     ___almod@divisor:	
   483                           ; 4 bytes @ 0x6
   484                           
   485                           
   486                           ; 4 bytes @ 0x6
   487  0026                     	ds	4
   488  002A                     ___almod@dividend:
   489                           
   490                           ; 4 bytes @ 0xA
   491  002A                     	ds	4
   492  002E                     ??___almod:
   493                           
   494                           ; 1 bytes @ 0xE
   495  002E                     	ds	1
   496  002F                     ___almod@counter:
   497                           
   498                           ; 1 bytes @ 0xF
   499  002F                     	ds	1
   500  0030                     ___almod@sign:
   501                           
   502                           ; 1 bytes @ 0x10
   503  0030                     	ds	1
   504  0031                     ??_ADC_1:
   505                           
   506                           ; 1 bytes @ 0x11
   507  0031                     	ds	4
   508                           
   509                           	psect	maintext
   510  0250                     __pmaintext:	
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 72 in file "es3.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : B00/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels required when called:    3
   536 ;; This function calls:
   537 ;;		_ADC_1
   538 ;;		_setup
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _main
   546  0250                     _main:
   547  0250                     l1130:	
   548                           ;incstack = 0
   549                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;es3.c: 74:     setup();
   553  0250  120A  118A  21F3  120A  118A  	fcall	_setup
   554  0255                     l1132:
   555                           
   556                           ;es3.c: 76:     {;es3.c: 77:         if (ADCON0bits.GO_DONE == 0) {
   557  0255  1283               	bcf	3,5	;RP0=0, select bank0
   558  0256  1303               	bcf	3,6	;RP1=0, select bank0
   559  0257  189F               	btfsc	31,1	;volatile
   560  0258  2A5A               	goto	u551
   561  0259  2A5B               	goto	u550
   562  025A                     u551:
   563  025A  2A55               	goto	l1132
   564  025B                     u550:
   565  025B                     l1134:
   566                           
   567                           ;es3.c: 78:             ADC_1();
   568  025B  120A  118A  20D8  120A  118A  	fcall	_ADC_1
   569  0260  2A55               	goto	l1132
   570  0261  120A  118A  280C   	ljmp	start
   571  0264                     __end_of_main:
   572                           
   573                           	psect	text1
   574  01F3                     __ptext1:	
   575 ;; *************** function _setup *****************
   576 ;; Defined at:
   577 ;;		line 105 in file "es3.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    2
   598 ;; This function calls:
   599 ;;		_canal_12
   600 ;;		_spiInit
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _setup
   608  01F3                     _setup:
   609  01F3                     l992:	
   610                           ;incstack = 0
   611                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   612                           
   613                           
   614                           ;es3.c: 107:     ANSEL = 0x00;
   615  01F3  1683               	bsf	3,5	;RP0=1, select bank3
   616  01F4  1703               	bsf	3,6	;RP1=1, select bank3
   617  01F5  0188               	clrf	8	;volatile
   618                           
   619                           ;es3.c: 108:     ANSELH = 0x00;
   620  01F6  0189               	clrf	9	;volatile
   621                           
   622                           ;es3.c: 110:     TRISA = 0x00;
   623  01F7  1683               	bsf	3,5	;RP0=1, select bank1
   624  01F8  1303               	bcf	3,6	;RP1=0, select bank1
   625  01F9  0185               	clrf	5	;volatile
   626                           
   627                           ;es3.c: 111:     TRISB = 0x00;
   628  01FA  0186               	clrf	6	;volatile
   629  01FB                     l994:
   630                           
   631                           ;es3.c: 112:     TRISC = 0x80;
   632  01FB  3080               	movlw	128
   633  01FC  0087               	movwf	7	;volatile
   634  01FD                     l996:
   635                           
   636                           ;es3.c: 113:     TRISD = 0x00;
   637  01FD  0188               	clrf	8	;volatile
   638  01FE                     l998:
   639                           
   640                           ;es3.c: 114:     TRISE = 0x00;
   641  01FE  0189               	clrf	9	;volatile
   642  01FF                     l1000:
   643                           
   644                           ;es3.c: 116:     PORTA = 0;
   645  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   646  0200  1303               	bcf	3,6	;RP1=0, select bank0
   647  0201  0185               	clrf	5	;volatile
   648  0202                     l1002:
   649                           
   650                           ;es3.c: 117:     PORTB = 0;
   651  0202  0186               	clrf	6	;volatile
   652  0203                     l1004:
   653                           
   654                           ;es3.c: 118:     PORTC = 0;
   655  0203  0187               	clrf	7	;volatile
   656  0204                     l1006:
   657                           
   658                           ;es3.c: 119:     PORTD = 0;
   659  0204  0188               	clrf	8	;volatile
   660  0205                     l1008:
   661                           
   662                           ;es3.c: 120:     PORTE = 0;
   663  0205  0189               	clrf	9	;volatile
   664  0206                     l1010:
   665                           
   666                           ;es3.c: 123:     IOCB = 0x00;
   667  0206  1683               	bsf	3,5	;RP0=1, select bank1
   668  0207  1303               	bcf	3,6	;RP1=0, select bank1
   669  0208  0196               	clrf	22	;volatile
   670  0209                     l1012:
   671                           
   672                           ;es3.c: 124:     INTCONbits.RBIE = 0;
   673  0209  118B               	bcf	11,3	;volatile
   674  020A                     l1014:
   675                           
   676                           ;es3.c: 125:     INTCONbits.T0IE = 0;
   677  020A  128B               	bcf	11,5	;volatile
   678  020B                     l1016:
   679                           
   680                           ;es3.c: 126:     INTCONbits.PEIE = 1;
   681  020B  170B               	bsf	11,6	;volatile
   682  020C                     l1018:
   683                           
   684                           ;es3.c: 127:     INTCONbits.GIE = 1;
   685  020C  178B               	bsf	11,7	;volatile
   686  020D                     l1020:
   687                           
   688                           ;es3.c: 129:     OSCCON = 0b01100001;
   689  020D  3061               	movlw	97
   690  020E  008F               	movwf	15	;volatile
   691  020F                     l1022:
   692                           
   693                           ;es3.c: 131:     OPTION_REGbits.T0CS = 0;
   694  020F  1281               	bcf	1,5	;volatile
   695  0210                     l1024:
   696                           
   697                           ;es3.c: 132:     OPTION_REGbits.PSA = 0;
   698  0210  1181               	bcf	1,3	;volatile
   699  0211                     l1026:
   700                           
   701                           ;es3.c: 133:     OPTION_REGbits.PS2 = 0;
   702  0211  1101               	bcf	1,2	;volatile
   703  0212                     l1028:
   704                           
   705                           ;es3.c: 134:     OPTION_REGbits.PS1 = 0;
   706  0212  1081               	bcf	1,1	;volatile
   707  0213                     l1030:
   708                           
   709                           ;es3.c: 135:     OPTION_REGbits.PS0 = 1;
   710  0213  1401               	bsf	1,0	;volatile
   711  0214                     l1032:
   712                           
   713                           ;es3.c: 137:     TMR0 = 6;;
   714  0214  3006               	movlw	6
   715  0215  1283               	bcf	3,5	;RP0=0, select bank0
   716  0216  1303               	bcf	3,6	;RP1=0, select bank0
   717  0217  0081               	movwf	1	;volatile
   718  0218                     l1034:
   719                           
   720                           ;es3.c: 139:     INTCONbits.T0IF = 0;
   721  0218  110B               	bcf	11,2	;volatile
   722  0219                     l1036:
   723                           
   724                           ;es3.c: 142:     ANSELHbits.ANS12 = 1;
   725  0219  1683               	bsf	3,5	;RP0=1, select bank3
   726  021A  1703               	bsf	3,6	;RP1=1, select bank3
   727  021B  1609               	bsf	9,4	;volatile
   728  021C                     l1038:
   729                           
   730                           ;es3.c: 146:     canal_12();
   731  021C  120A  118A  227C  120A  118A  	fcall	_canal_12
   732  0221                     l1040:
   733                           
   734                           ;es3.c: 149:     ADCON1bits.VCFG0 = 0;
   735  0221  1683               	bsf	3,5	;RP0=1, select bank1
   736  0222  1303               	bcf	3,6	;RP1=0, select bank1
   737  0223  121F               	bcf	31,4	;volatile
   738  0224                     l1042:
   739                           
   740                           ;es3.c: 150:     ADCON1bits.VCFG1 = 0;
   741  0224  129F               	bcf	31,5	;volatile
   742  0225                     l1044:
   743                           
   744                           ;es3.c: 153:     ADCON1bits.ADFM = 0;
   745  0225  139F               	bcf	31,7	;volatile
   746  0226                     l1046:
   747                           
   748                           ;es3.c: 157:     ADCON0bits.GO_DONE = 1;
   749  0226  1283               	bcf	3,5	;RP0=0, select bank0
   750  0227  1303               	bcf	3,6	;RP1=0, select bank0
   751  0228  149F               	bsf	31,1	;volatile
   752  0229                     l1048:
   753                           
   754                           ;es3.c: 160:     ADCON0bits.ADON = 1;
   755  0229  141F               	bsf	31,0	;volatile
   756  022A                     l1050:
   757                           
   758                           ;es3.c: 163:     INTCONbits.GIE = 1;
   759  022A  178B               	bsf	11,7	;volatile
   760  022B                     l1052:
   761                           
   762                           ;es3.c: 164:     PIE1bits.ADIE = 0;
   763  022B  1683               	bsf	3,5	;RP0=1, select bank1
   764  022C  1303               	bcf	3,6	;RP1=0, select bank1
   765  022D  130C               	bcf	12,6	;volatile
   766  022E                     l1054:
   767                           
   768                           ;es3.c: 165:     PIE1bits.ADIE = 1;
   769  022E  170C               	bsf	12,6	;volatile
   770  022F                     l1056:
   771                           
   772                           ;es3.c: 167:     TRISAbits.TRISA5 = 1;
   773  022F  1685               	bsf	5,5	;volatile
   774  0230                     l1058:
   775                           
   776                           ;es3.c: 168:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   777  0230  01F2               	clrf	spiInit@sDataSample
   778  0231  01F3               	clrf	spiInit@sClockIdle
   779  0232  01F4               	clrf	spiInit@sTransmitEdge
   780  0233  3025               	movlw	37
   781  0234  120A  118A  223A  120A  118A  	fcall	_spiInit
   782  0239                     l90:
   783  0239  0008               	return
   784  023A                     __end_of_setup:
   785                           
   786                           	psect	text2
   787  023A                     __ptext2:	
   788 ;; *************** function _spiInit *****************
   789 ;; Defined at:
   790 ;;		line 3 in file "SPIe3.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  sType           1    wreg     enum E1264
   793 ;;  sDataSample     1    2[COMMON] enum E1272
   794 ;;  sClockIdle      1    3[COMMON] enum E1276
   795 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  sType           1    5[COMMON] enum E1264
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         3       0       0       0       0
   808 ;;      Locals:         1       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0
   810 ;;      Totals:         4       0       0       0       0
   811 ;;Total ram usage:        4 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_setup
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _spiInit
   823  023A                     _spiInit:
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   827                           ;spiInit@sType stored from wreg
   828  023A  00F5               	movwf	spiInit@sType
   829  023B                     l910:
   830                           
   831                           ;SPIe3.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIe3.c: 4: {;SPIe3.c: 5:     TRISC5 = 0;
   832  023B  1683               	bsf	3,5	;RP0=1, select bank1
   833  023C  1303               	bcf	3,6	;RP1=0, select bank1
   834  023D  1287               	bcf	7,5	;volatile
   835                           
   836                           ;SPIe3.c: 6:     if(sType & 0b00000100)
   837  023E  1D75               	btfss	spiInit@sType,2
   838  023F  2A41               	goto	u241
   839  0240  2A42               	goto	u240
   840  0241                     u241:
   841  0241  2A46               	goto	l916
   842  0242                     u240:
   843  0242                     l912:
   844                           
   845                           ;SPIe3.c: 7:     {;SPIe3.c: 8:         SSPSTAT = sTransmitEdge;
   846  0242  0874               	movf	spiInit@sTransmitEdge,w
   847  0243  0094               	movwf	20	;volatile
   848  0244                     l914:
   849                           
   850                           ;SPIe3.c: 9:         TRISC3 = 1;
   851  0244  1587               	bsf	7,3	;volatile
   852                           
   853                           ;SPIe3.c: 10:     }
   854  0245  2A4A               	goto	l106
   855  0246                     l916:
   856                           
   857                           ;SPIe3.c: 12:     {;SPIe3.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
   858  0246  0872               	movf	spiInit@sDataSample,w
   859  0247  0474               	iorwf	spiInit@sTransmitEdge,w
   860  0248  0094               	movwf	20	;volatile
   861  0249                     l918:
   862                           
   863                           ;SPIe3.c: 14:         TRISC3 = 0;
   864  0249  1187               	bcf	7,3	;volatile
   865  024A                     l106:	
   866                           ;SPIe3.c: 15:     }
   867                           
   868                           
   869                           ;SPIe3.c: 17:     SSPCON = sType | sClockIdle;
   870  024A  0875               	movf	spiInit@sType,w
   871  024B  0473               	iorwf	spiInit@sClockIdle,w
   872  024C  1283               	bcf	3,5	;RP0=0, select bank0
   873  024D  1303               	bcf	3,6	;RP1=0, select bank0
   874  024E  0094               	movwf	20	;volatile
   875  024F                     l107:
   876  024F  0008               	return
   877  0250                     __end_of_spiInit:
   878                           
   879                           	psect	text3
   880  027C                     __ptext3:	
   881 ;; *************** function _canal_12 *****************
   882 ;; Defined at:
   883 ;;		line 84 in file "es3.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		None
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_setup
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _canal_12
   913  027C                     _canal_12:
   914  027C                     l716:	
   915                           ;incstack = 0
   916                           ; Regs used in _canal_12: []
   917                           
   918                           
   919                           ;es3.c: 87:     ADCON0bits.CHS3 = 1;
   920  027C  1283               	bcf	3,5	;RP0=0, select bank0
   921  027D  1303               	bcf	3,6	;RP1=0, select bank0
   922  027E  169F               	bsf	31,5	;volatile
   923                           
   924                           ;es3.c: 88:     ADCON0bits.CHS2 = 0;
   925  027F  121F               	bcf	31,4	;volatile
   926                           
   927                           ;es3.c: 89:     ADCON0bits.CHS1 = 1;
   928  0280  159F               	bsf	31,3	;volatile
   929                           
   930                           ;es3.c: 90:     ADCON0bits.CHS0 = 0;
   931  0281  111F               	bcf	31,2	;volatile
   932  0282                     l84:
   933  0282  0008               	return
   934  0283                     __end_of_canal_12:
   935                           
   936                           	psect	text4
   937  00D8                     __ptext4:	
   938 ;; *************** function _ADC_1 *****************
   939 ;; Defined at:
   940 ;;		line 92 in file "es3.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       4       0       0       0
   957 ;;      Totals:         0       4       0       0       0
   958 ;;Total ram usage:        4 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    2
   961 ;; This function calls:
   962 ;;		___aldiv
   963 ;;		___almod
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _ADC_1
   971  00D8                     _ADC_1:
   972  00D8                     l1118:	
   973                           ;incstack = 0
   974                           ; Regs used in _ADC_1: [wreg+status,2+status,0+pclath+cstack]
   975                           
   976                           
   977                           ;es3.c: 93:     adc_data1 = ADRESH;
   978  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   979  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   980  00DA  081E               	movf	30,w	;volatile
   981  00DB  00B1               	movwf	??_ADC_1
   982  00DC  01B2               	clrf	??_ADC_1+1
   983  00DD  01B3               	clrf	??_ADC_1+2
   984  00DE  01B4               	clrf	??_ADC_1+3
   985  00DF  0834               	movf	??_ADC_1+3,w
   986  00E0  00C4               	movwf	_adc_data1+3
   987  00E1  0833               	movf	??_ADC_1+2,w
   988  00E2  00C3               	movwf	_adc_data1+2
   989  00E3  0832               	movf	??_ADC_1+1,w
   990  00E4  00C2               	movwf	_adc_data1+1
   991  00E5  0831               	movf	??_ADC_1,w
   992  00E6  00C1               	movwf	_adc_data1
   993  00E7                     l1120:
   994                           
   995                           ;es3.c: 94:     temp[0] = (adc_data1/100) % 10 + '0';
   996  00E7  3000               	movlw	0
   997  00E8  00A9               	movwf	___almod@divisor+3
   998  00E9  3000               	movlw	0
   999  00EA  00A8               	movwf	___almod@divisor+2
  1000  00EB  3000               	movlw	0
  1001  00EC  00A7               	movwf	___almod@divisor+1
  1002  00ED  300A               	movlw	10
  1003  00EE  00A6               	movwf	___almod@divisor
  1004  00EF  3000               	movlw	0
  1005  00F0  00F5               	movwf	___aldiv@divisor+3
  1006  00F1  3000               	movlw	0
  1007  00F2  00F4               	movwf	___aldiv@divisor+2
  1008  00F3  3000               	movlw	0
  1009  00F4  00F3               	movwf	___aldiv@divisor+1
  1010  00F5  3064               	movlw	100
  1011  00F6  00F2               	movwf	___aldiv@divisor
  1012  00F7  0844               	movf	_adc_data1+3,w
  1013  00F8  00F9               	movwf	___aldiv@dividend+3
  1014  00F9  0843               	movf	_adc_data1+2,w
  1015  00FA  00F8               	movwf	___aldiv@dividend+2
  1016  00FB  0842               	movf	_adc_data1+1,w
  1017  00FC  00F7               	movwf	___aldiv@dividend+1
  1018  00FD  0841               	movf	_adc_data1,w
  1019  00FE  00F6               	movwf	___aldiv@dividend
  1020  00FF  120A  118A  203B  120A  118A  	fcall	___aldiv
  1021  0104  0875               	movf	?___aldiv+3,w
  1022  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0107  00AD               	movwf	___almod@dividend+3
  1025  0108  0874               	movf	?___aldiv+2,w
  1026  0109  00AC               	movwf	___almod@dividend+2
  1027  010A  0873               	movf	?___aldiv+1,w
  1028  010B  00AB               	movwf	___almod@dividend+1
  1029  010C  0872               	movf	?___aldiv,w
  1030  010D  00AA               	movwf	___almod@dividend
  1031  010E  120A  118A  216C  120A  118A  	fcall	___almod
  1032  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0115  0826               	movf	?___almod,w
  1035  0116  3E30               	addlw	48
  1036  0117  00B1               	movwf	??_ADC_1
  1037  0118  0831               	movf	??_ADC_1,w
  1038  0119  00C5               	movwf	_temp
  1039  011A                     l1122:
  1040                           
  1041                           ;es3.c: 95:     temp[1] = (adc_data1/10) % 10 + '0';
  1042  011A  3000               	movlw	0
  1043  011B  00A9               	movwf	___almod@divisor+3
  1044  011C  3000               	movlw	0
  1045  011D  00A8               	movwf	___almod@divisor+2
  1046  011E  3000               	movlw	0
  1047  011F  00A7               	movwf	___almod@divisor+1
  1048  0120  300A               	movlw	10
  1049  0121  00A6               	movwf	___almod@divisor
  1050  0122  3000               	movlw	0
  1051  0123  00F5               	movwf	___aldiv@divisor+3
  1052  0124  3000               	movlw	0
  1053  0125  00F4               	movwf	___aldiv@divisor+2
  1054  0126  3000               	movlw	0
  1055  0127  00F3               	movwf	___aldiv@divisor+1
  1056  0128  300A               	movlw	10
  1057  0129  00F2               	movwf	___aldiv@divisor
  1058  012A  0844               	movf	_adc_data1+3,w
  1059  012B  00F9               	movwf	___aldiv@dividend+3
  1060  012C  0843               	movf	_adc_data1+2,w
  1061  012D  00F8               	movwf	___aldiv@dividend+2
  1062  012E  0842               	movf	_adc_data1+1,w
  1063  012F  00F7               	movwf	___aldiv@dividend+1
  1064  0130  0841               	movf	_adc_data1,w
  1065  0131  00F6               	movwf	___aldiv@dividend
  1066  0132  120A  118A  203B  120A  118A  	fcall	___aldiv
  1067  0137  0875               	movf	?___aldiv+3,w
  1068  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1070  013A  00AD               	movwf	___almod@dividend+3
  1071  013B  0874               	movf	?___aldiv+2,w
  1072  013C  00AC               	movwf	___almod@dividend+2
  1073  013D  0873               	movf	?___aldiv+1,w
  1074  013E  00AB               	movwf	___almod@dividend+1
  1075  013F  0872               	movf	?___aldiv,w
  1076  0140  00AA               	movwf	___almod@dividend
  1077  0141  120A  118A  216C  120A  118A  	fcall	___almod
  1078  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0148  0826               	movf	?___almod,w
  1081  0149  3E30               	addlw	48
  1082  014A  00B1               	movwf	??_ADC_1
  1083  014B  0831               	movf	??_ADC_1,w
  1084  014C  00C6               	movwf	_temp+1
  1085  014D                     l1124:
  1086                           
  1087                           ;es3.c: 96:     temp[3] = adc_data1 % 10 + '0';
  1088  014D  3000               	movlw	0
  1089  014E  00A9               	movwf	___almod@divisor+3
  1090  014F  3000               	movlw	0
  1091  0150  00A8               	movwf	___almod@divisor+2
  1092  0151  3000               	movlw	0
  1093  0152  00A7               	movwf	___almod@divisor+1
  1094  0153  300A               	movlw	10
  1095  0154  00A6               	movwf	___almod@divisor
  1096  0155  0844               	movf	_adc_data1+3,w
  1097  0156  00AD               	movwf	___almod@dividend+3
  1098  0157  0843               	movf	_adc_data1+2,w
  1099  0158  00AC               	movwf	___almod@dividend+2
  1100  0159  0842               	movf	_adc_data1+1,w
  1101  015A  00AB               	movwf	___almod@dividend+1
  1102  015B  0841               	movf	_adc_data1,w
  1103  015C  00AA               	movwf	___almod@dividend
  1104  015D  120A  118A  216C  120A  118A  	fcall	___almod
  1105  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0164  0826               	movf	?___almod,w
  1108  0165  3E30               	addlw	48
  1109  0166  00B1               	movwf	??_ADC_1
  1110  0167  0831               	movf	??_ADC_1,w
  1111  0168  00C8               	movwf	_temp+3
  1112  0169                     l1126:
  1113                           
  1114                           ;es3.c: 97:     ADCON0bits.GO_DONE =1;
  1115  0169  149F               	bsf	31,1	;volatile
  1116  016A                     l1128:
  1117                           
  1118                           ;es3.c: 98:     PIR1bits.ADIF = 0;
  1119  016A  130C               	bcf	12,6	;volatile
  1120  016B                     l87:
  1121  016B  0008               	return
  1122  016C                     __end_of_ADC_1:
  1123                           
  1124                           	psect	text5
  1125  016C                     __ptext5:	
  1126 ;; *************** function ___almod *****************
  1127 ;; Defined at:
  1128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\almod.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  divisor         4    6[BANK0 ] long 
  1131 ;;  dividend        4   10[BANK0 ] long 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  sign            1   16[BANK0 ] unsigned char 
  1134 ;;  counter         1   15[BANK0 ] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  4    6[BANK0 ] long 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       8       0       0       0
  1145 ;;      Locals:         0       2       0       0       0
  1146 ;;      Temps:          0       1       0       0       0
  1147 ;;      Totals:         0      11       0       0       0
  1148 ;;Total ram usage:       11 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_ADC_1
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function ___almod
  1160  016C                     ___almod:
  1161  016C                     l1086:	
  1162                           ;incstack = 0
  1163                           ; Regs used in ___almod: [wreg+status,2+status,0]
  1164                           
  1165  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1166  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1167  016E  01B0               	clrf	___almod@sign
  1168  016F                     l1088:
  1169  016F  1FAD               	btfss	___almod@dividend+3,7
  1170  0170  2972               	goto	u461
  1171  0171  2973               	goto	u460
  1172  0172                     u461:
  1173  0172  2980               	goto	l288
  1174  0173                     u460:
  1175  0173                     l1090:
  1176  0173  09AA               	comf	___almod@dividend,f
  1177  0174  09AB               	comf	___almod@dividend+1,f
  1178  0175  09AC               	comf	___almod@dividend+2,f
  1179  0176  09AD               	comf	___almod@dividend+3,f
  1180  0177  0AAA               	incf	___almod@dividend,f
  1181  0178  1903               	skipnz
  1182  0179  0AAB               	incf	___almod@dividend+1,f
  1183  017A  1903               	skipnz
  1184  017B  0AAC               	incf	___almod@dividend+2,f
  1185  017C  1903               	skipnz
  1186  017D  0AAD               	incf	___almod@dividend+3,f
  1187  017E  01B0               	clrf	___almod@sign
  1188  017F  0AB0               	incf	___almod@sign,f
  1189  0180                     l288:
  1190  0180  1FA9               	btfss	___almod@divisor+3,7
  1191  0181  2983               	goto	u471
  1192  0182  2984               	goto	u470
  1193  0183                     u471:
  1194  0183  298F               	goto	l1094
  1195  0184                     u470:
  1196  0184                     l1092:
  1197  0184  09A6               	comf	___almod@divisor,f
  1198  0185  09A7               	comf	___almod@divisor+1,f
  1199  0186  09A8               	comf	___almod@divisor+2,f
  1200  0187  09A9               	comf	___almod@divisor+3,f
  1201  0188  0AA6               	incf	___almod@divisor,f
  1202  0189  1903               	skipnz
  1203  018A  0AA7               	incf	___almod@divisor+1,f
  1204  018B  1903               	skipnz
  1205  018C  0AA8               	incf	___almod@divisor+2,f
  1206  018D  1903               	skipnz
  1207  018E  0AA9               	incf	___almod@divisor+3,f
  1208  018F                     l1094:
  1209  018F  0829               	movf	___almod@divisor+3,w
  1210  0190  0428               	iorwf	___almod@divisor+2,w
  1211  0191  0427               	iorwf	___almod@divisor+1,w
  1212  0192  0426               	iorwf	___almod@divisor,w
  1213  0193  1903               	skipnz
  1214  0194  2996               	goto	u481
  1215  0195  2997               	goto	u480
  1216  0196                     u481:
  1217  0196  29DA               	goto	l1110
  1218  0197                     u480:
  1219  0197                     l1096:
  1220  0197  01AF               	clrf	___almod@counter
  1221  0198  0AAF               	incf	___almod@counter,f
  1222  0199  29A7               	goto	l1100
  1223  019A                     l1098:
  1224  019A  3001               	movlw	1
  1225  019B  00AE               	movwf	??___almod
  1226  019C                     u495:
  1227  019C  1003               	clrc
  1228  019D  0DA6               	rlf	___almod@divisor,f
  1229  019E  0DA7               	rlf	___almod@divisor+1,f
  1230  019F  0DA8               	rlf	___almod@divisor+2,f
  1231  01A0  0DA9               	rlf	___almod@divisor+3,f
  1232  01A1  0BAE               	decfsz	??___almod,f
  1233  01A2  299C               	goto	u495
  1234  01A3  3001               	movlw	1
  1235  01A4  00AE               	movwf	??___almod
  1236  01A5  082E               	movf	??___almod,w
  1237  01A6  07AF               	addwf	___almod@counter,f
  1238  01A7                     l1100:
  1239  01A7  1FA9               	btfss	___almod@divisor+3,7
  1240  01A8  29AA               	goto	u501
  1241  01A9  29AB               	goto	u500
  1242  01AA                     u501:
  1243  01AA  299A               	goto	l1098
  1244  01AB                     u500:
  1245  01AB                     l1102:
  1246  01AB  0829               	movf	___almod@divisor+3,w
  1247  01AC  022D               	subwf	___almod@dividend+3,w
  1248  01AD  1D03               	skipz
  1249  01AE  29B9               	goto	u515
  1250  01AF  0828               	movf	___almod@divisor+2,w
  1251  01B0  022C               	subwf	___almod@dividend+2,w
  1252  01B1  1D03               	skipz
  1253  01B2  29B9               	goto	u515
  1254  01B3  0827               	movf	___almod@divisor+1,w
  1255  01B4  022B               	subwf	___almod@dividend+1,w
  1256  01B5  1D03               	skipz
  1257  01B6  29B9               	goto	u515
  1258  01B7  0826               	movf	___almod@divisor,w
  1259  01B8  022A               	subwf	___almod@dividend,w
  1260  01B9                     u515:
  1261  01B9  1C03               	skipc
  1262  01BA  29BC               	goto	u511
  1263  01BB  29BD               	goto	u510
  1264  01BC                     u511:
  1265  01BC  29CB               	goto	l1106
  1266  01BD                     u510:
  1267  01BD                     l1104:
  1268  01BD  0826               	movf	___almod@divisor,w
  1269  01BE  02AA               	subwf	___almod@dividend,f
  1270  01BF  0827               	movf	___almod@divisor+1,w
  1271  01C0  1C03               	skipc
  1272  01C1  0F27               	incfsz	___almod@divisor+1,w
  1273  01C2  02AB               	subwf	___almod@dividend+1,f
  1274  01C3  0828               	movf	___almod@divisor+2,w
  1275  01C4  1C03               	skipc
  1276  01C5  0F28               	incfsz	___almod@divisor+2,w
  1277  01C6  02AC               	subwf	___almod@dividend+2,f
  1278  01C7  0829               	movf	___almod@divisor+3,w
  1279  01C8  1C03               	skipc
  1280  01C9  0F29               	incfsz	___almod@divisor+3,w
  1281  01CA  02AD               	subwf	___almod@dividend+3,f
  1282  01CB                     l1106:
  1283  01CB  3001               	movlw	1
  1284  01CC                     u525:
  1285  01CC  1003               	clrc
  1286  01CD  0CA9               	rrf	___almod@divisor+3,f
  1287  01CE  0CA8               	rrf	___almod@divisor+2,f
  1288  01CF  0CA7               	rrf	___almod@divisor+1,f
  1289  01D0  0CA6               	rrf	___almod@divisor,f
  1290  01D1  3EFF               	addlw	-1
  1291  01D2  1D03               	skipz
  1292  01D3  29CC               	goto	u525
  1293  01D4                     l1108:
  1294  01D4  3001               	movlw	1
  1295  01D5  02AF               	subwf	___almod@counter,f
  1296  01D6  1D03               	btfss	3,2
  1297  01D7  29D9               	goto	u531
  1298  01D8  29DA               	goto	u530
  1299  01D9                     u531:
  1300  01D9  29AB               	goto	l1102
  1301  01DA                     u530:
  1302  01DA                     l1110:
  1303  01DA  0830               	movf	___almod@sign,w
  1304  01DB  1903               	btfsc	3,2
  1305  01DC  29DE               	goto	u541
  1306  01DD  29DF               	goto	u540
  1307  01DE                     u541:
  1308  01DE  29EA               	goto	l1114
  1309  01DF                     u540:
  1310  01DF                     l1112:
  1311  01DF  09AA               	comf	___almod@dividend,f
  1312  01E0  09AB               	comf	___almod@dividend+1,f
  1313  01E1  09AC               	comf	___almod@dividend+2,f
  1314  01E2  09AD               	comf	___almod@dividend+3,f
  1315  01E3  0AAA               	incf	___almod@dividend,f
  1316  01E4  1903               	skipnz
  1317  01E5  0AAB               	incf	___almod@dividend+1,f
  1318  01E6  1903               	skipnz
  1319  01E7  0AAC               	incf	___almod@dividend+2,f
  1320  01E8  1903               	skipnz
  1321  01E9  0AAD               	incf	___almod@dividend+3,f
  1322  01EA                     l1114:
  1323  01EA  082D               	movf	___almod@dividend+3,w
  1324  01EB  00A9               	movwf	?___almod+3
  1325  01EC  082C               	movf	___almod@dividend+2,w
  1326  01ED  00A8               	movwf	?___almod+2
  1327  01EE  082B               	movf	___almod@dividend+1,w
  1328  01EF  00A7               	movwf	?___almod+1
  1329  01F0  082A               	movf	___almod@dividend,w
  1330  01F1  00A6               	movwf	?___almod
  1331  01F2                     l298:
  1332  01F2  0008               	return
  1333  01F3                     __end_of___almod:
  1334                           
  1335                           	psect	text6
  1336  003B                     __ptext6:	
  1337 ;; *************** function ___aldiv *****************
  1338 ;; Defined at:
  1339 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  divisor         4    2[COMMON] long 
  1342 ;;  dividend        4    6[COMMON] long 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  quotient        4    2[BANK0 ] long 
  1345 ;;  sign            1    1[BANK0 ] unsigned char 
  1346 ;;  counter         1    0[BANK0 ] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  4    2[COMMON] long 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         8       0       0       0       0
  1357 ;;      Locals:         0       6       0       0       0
  1358 ;;      Temps:          1       0       0       0       0
  1359 ;;      Totals:         9       6       0       0       0
  1360 ;;Total ram usage:       15 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    1
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_ADC_1
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function ___aldiv
  1372  003B                     ___aldiv:
  1373  003B                     l920:	
  1374                           ;incstack = 0
  1375                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1376                           
  1377  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1378  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1379  003D  01A1               	clrf	___aldiv@sign
  1380  003E                     l922:
  1381  003E  1FF5               	btfss	___aldiv@divisor+3,7
  1382  003F  2841               	goto	u251
  1383  0040  2842               	goto	u250
  1384  0041                     u251:
  1385  0041  284F               	goto	l275
  1386  0042                     u250:
  1387  0042                     l924:
  1388  0042  09F2               	comf	___aldiv@divisor,f
  1389  0043  09F3               	comf	___aldiv@divisor+1,f
  1390  0044  09F4               	comf	___aldiv@divisor+2,f
  1391  0045  09F5               	comf	___aldiv@divisor+3,f
  1392  0046  0AF2               	incf	___aldiv@divisor,f
  1393  0047  1903               	skipnz
  1394  0048  0AF3               	incf	___aldiv@divisor+1,f
  1395  0049  1903               	skipnz
  1396  004A  0AF4               	incf	___aldiv@divisor+2,f
  1397  004B  1903               	skipnz
  1398  004C  0AF5               	incf	___aldiv@divisor+3,f
  1399  004D  01A1               	clrf	___aldiv@sign
  1400  004E  0AA1               	incf	___aldiv@sign,f
  1401  004F                     l275:
  1402  004F  1FF9               	btfss	___aldiv@dividend+3,7
  1403  0050  2852               	goto	u261
  1404  0051  2853               	goto	u260
  1405  0052                     u261:
  1406  0052  2862               	goto	l930
  1407  0053                     u260:
  1408  0053                     l926:
  1409  0053  09F6               	comf	___aldiv@dividend,f
  1410  0054  09F7               	comf	___aldiv@dividend+1,f
  1411  0055  09F8               	comf	___aldiv@dividend+2,f
  1412  0056  09F9               	comf	___aldiv@dividend+3,f
  1413  0057  0AF6               	incf	___aldiv@dividend,f
  1414  0058  1903               	skipnz
  1415  0059  0AF7               	incf	___aldiv@dividend+1,f
  1416  005A  1903               	skipnz
  1417  005B  0AF8               	incf	___aldiv@dividend+2,f
  1418  005C  1903               	skipnz
  1419  005D  0AF9               	incf	___aldiv@dividend+3,f
  1420  005E                     l928:
  1421  005E  3001               	movlw	1
  1422  005F  00FA               	movwf	??___aldiv
  1423  0060  087A               	movf	??___aldiv,w
  1424  0061  06A1               	xorwf	___aldiv@sign,f
  1425  0062                     l930:
  1426  0062  3000               	movlw	0
  1427  0063  00A5               	movwf	___aldiv@quotient+3
  1428  0064  3000               	movlw	0
  1429  0065  00A4               	movwf	___aldiv@quotient+2
  1430  0066  3000               	movlw	0
  1431  0067  00A3               	movwf	___aldiv@quotient+1
  1432  0068  3000               	movlw	0
  1433  0069  00A2               	movwf	___aldiv@quotient
  1434  006A                     l932:
  1435  006A  0875               	movf	___aldiv@divisor+3,w
  1436  006B  0474               	iorwf	___aldiv@divisor+2,w
  1437  006C  0473               	iorwf	___aldiv@divisor+1,w
  1438  006D  0472               	iorwf	___aldiv@divisor,w
  1439  006E  1903               	skipnz
  1440  006F  2871               	goto	u271
  1441  0070  2872               	goto	u270
  1442  0071                     u271:
  1443  0071  28BF               	goto	l952
  1444  0072                     u270:
  1445  0072                     l934:
  1446  0072  01A0               	clrf	___aldiv@counter
  1447  0073  0AA0               	incf	___aldiv@counter,f
  1448  0074  2882               	goto	l938
  1449  0075                     l936:
  1450  0075  3001               	movlw	1
  1451  0076  00FA               	movwf	??___aldiv
  1452  0077                     u285:
  1453  0077  1003               	clrc
  1454  0078  0DF2               	rlf	___aldiv@divisor,f
  1455  0079  0DF3               	rlf	___aldiv@divisor+1,f
  1456  007A  0DF4               	rlf	___aldiv@divisor+2,f
  1457  007B  0DF5               	rlf	___aldiv@divisor+3,f
  1458  007C  0BFA               	decfsz	??___aldiv,f
  1459  007D  2877               	goto	u285
  1460  007E  3001               	movlw	1
  1461  007F  00FA               	movwf	??___aldiv
  1462  0080  087A               	movf	??___aldiv,w
  1463  0081  07A0               	addwf	___aldiv@counter,f
  1464  0082                     l938:
  1465  0082  1FF5               	btfss	___aldiv@divisor+3,7
  1466  0083  2885               	goto	u291
  1467  0084  2886               	goto	u290
  1468  0085                     u291:
  1469  0085  2875               	goto	l936
  1470  0086                     u290:
  1471  0086                     l940:
  1472  0086  3001               	movlw	1
  1473  0087  00FA               	movwf	??___aldiv
  1474  0088                     u305:
  1475  0088  1003               	clrc
  1476  0089  0DA2               	rlf	___aldiv@quotient,f
  1477  008A  0DA3               	rlf	___aldiv@quotient+1,f
  1478  008B  0DA4               	rlf	___aldiv@quotient+2,f
  1479  008C  0DA5               	rlf	___aldiv@quotient+3,f
  1480  008D  0BFA               	decfsz	??___aldiv,f
  1481  008E  2888               	goto	u305
  1482  008F                     l942:
  1483  008F  0875               	movf	___aldiv@divisor+3,w
  1484  0090  0279               	subwf	___aldiv@dividend+3,w
  1485  0091  1D03               	skipz
  1486  0092  289D               	goto	u315
  1487  0093  0874               	movf	___aldiv@divisor+2,w
  1488  0094  0278               	subwf	___aldiv@dividend+2,w
  1489  0095  1D03               	skipz
  1490  0096  289D               	goto	u315
  1491  0097  0873               	movf	___aldiv@divisor+1,w
  1492  0098  0277               	subwf	___aldiv@dividend+1,w
  1493  0099  1D03               	skipz
  1494  009A  289D               	goto	u315
  1495  009B  0872               	movf	___aldiv@divisor,w
  1496  009C  0276               	subwf	___aldiv@dividend,w
  1497  009D                     u315:
  1498  009D  1C03               	skipc
  1499  009E  28A0               	goto	u311
  1500  009F  28A1               	goto	u310
  1501  00A0                     u311:
  1502  00A0  28B0               	goto	l948
  1503  00A1                     u310:
  1504  00A1                     l944:
  1505  00A1  0872               	movf	___aldiv@divisor,w
  1506  00A2  02F6               	subwf	___aldiv@dividend,f
  1507  00A3  0873               	movf	___aldiv@divisor+1,w
  1508  00A4  1C03               	skipc
  1509  00A5  0F73               	incfsz	___aldiv@divisor+1,w
  1510  00A6  02F7               	subwf	___aldiv@dividend+1,f
  1511  00A7  0874               	movf	___aldiv@divisor+2,w
  1512  00A8  1C03               	skipc
  1513  00A9  0F74               	incfsz	___aldiv@divisor+2,w
  1514  00AA  02F8               	subwf	___aldiv@dividend+2,f
  1515  00AB  0875               	movf	___aldiv@divisor+3,w
  1516  00AC  1C03               	skipc
  1517  00AD  0F75               	incfsz	___aldiv@divisor+3,w
  1518  00AE  02F9               	subwf	___aldiv@dividend+3,f
  1519  00AF                     l946:
  1520  00AF  1422               	bsf	___aldiv@quotient,0
  1521  00B0                     l948:
  1522  00B0  3001               	movlw	1
  1523  00B1                     u325:
  1524  00B1  1003               	clrc
  1525  00B2  0CF5               	rrf	___aldiv@divisor+3,f
  1526  00B3  0CF4               	rrf	___aldiv@divisor+2,f
  1527  00B4  0CF3               	rrf	___aldiv@divisor+1,f
  1528  00B5  0CF2               	rrf	___aldiv@divisor,f
  1529  00B6  3EFF               	addlw	-1
  1530  00B7  1D03               	skipz
  1531  00B8  28B1               	goto	u325
  1532  00B9                     l950:
  1533  00B9  3001               	movlw	1
  1534  00BA  02A0               	subwf	___aldiv@counter,f
  1535  00BB  1D03               	btfss	3,2
  1536  00BC  28BE               	goto	u331
  1537  00BD  28BF               	goto	u330
  1538  00BE                     u331:
  1539  00BE  2886               	goto	l940
  1540  00BF                     u330:
  1541  00BF                     l952:
  1542  00BF  0821               	movf	___aldiv@sign,w
  1543  00C0  1903               	btfsc	3,2
  1544  00C1  28C3               	goto	u341
  1545  00C2  28C4               	goto	u340
  1546  00C3                     u341:
  1547  00C3  28CF               	goto	l956
  1548  00C4                     u340:
  1549  00C4                     l954:
  1550  00C4  09A2               	comf	___aldiv@quotient,f
  1551  00C5  09A3               	comf	___aldiv@quotient+1,f
  1552  00C6  09A4               	comf	___aldiv@quotient+2,f
  1553  00C7  09A5               	comf	___aldiv@quotient+3,f
  1554  00C8  0AA2               	incf	___aldiv@quotient,f
  1555  00C9  1903               	skipnz
  1556  00CA  0AA3               	incf	___aldiv@quotient+1,f
  1557  00CB  1903               	skipnz
  1558  00CC  0AA4               	incf	___aldiv@quotient+2,f
  1559  00CD  1903               	skipnz
  1560  00CE  0AA5               	incf	___aldiv@quotient+3,f
  1561  00CF                     l956:
  1562  00CF  0825               	movf	___aldiv@quotient+3,w
  1563  00D0  00F5               	movwf	?___aldiv+3
  1564  00D1  0824               	movf	___aldiv@quotient+2,w
  1565  00D2  00F4               	movwf	?___aldiv+2
  1566  00D3  0823               	movf	___aldiv@quotient+1,w
  1567  00D4  00F3               	movwf	?___aldiv+1
  1568  00D5  0822               	movf	___aldiv@quotient,w
  1569  00D6  00F2               	movwf	?___aldiv
  1570  00D7                     l285:
  1571  00D7  0008               	return
  1572  00D8                     __end_of___aldiv:
  1573                           
  1574                           	psect	text7
  1575  0264                     __ptext7:	
  1576 ;; *************** function _isr *****************
  1577 ;; Defined at:
  1578 ;;		line 61 in file "es3.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0
  1594 ;;      Temps:          2       0       0       0       0
  1595 ;;      Totals:         2       0       0       0       0
  1596 ;;Total ram usage:        2 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		Interrupt level 1
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _isr
  1607  0264                     _isr:
  1608  0264                     i1l1074:
  1609                           
  1610                           ;es3.c: 62:    if(PIR1bits.SSPIF == 1){
  1611  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0266  1D8C               	btfss	12,3	;volatile
  1614  0267  2A69               	goto	u44_21
  1615  0268  2A6A               	goto	u44_20
  1616  0269                     u44_21:
  1617  0269  2A6D               	goto	i1l72
  1618  026A                     u44_20:
  1619  026A                     i1l1076:
  1620                           
  1621                           ;es3.c: 63:        SSPBUF=adc_data1;
  1622  026A  0841               	movf	_adc_data1,w
  1623  026B  0093               	movwf	19	;volatile
  1624  026C                     i1l1078:
  1625                           
  1626                           ;es3.c: 64:        SSPIF = 0;
  1627  026C  118C               	bcf	12,3	;volatile
  1628  026D                     i1l72:
  1629  026D  0871               	movf	??_isr+1,w
  1630  026E  008A               	movwf	10
  1631  026F  0E70               	swapf	??_isr,w
  1632  0270  0083               	movwf	3
  1633  0271  0EFE               	swapf	btemp,f
  1634  0272  0E7E               	swapf	btemp,w
  1635  0273  0009               	retfie
  1636  0274                     __end_of_isr:
  1637  007E                     btemp	set	126	;btemp
  1638  007E                     wtemp0	set	126
  1639                           
  1640                           	psect	intentry
  1641  0004                     __pintentry:	
  1642                           ;incstack = 0
  1643                           ; Regs used in _isr: [wreg]
  1644                           
  1645  0004                     interrupt_function:
  1646  007E                     saved_w	set	btemp
  1647  0004  00FE               	movwf	btemp
  1648  0005  0E03               	swapf	3,w
  1649  0006  00F0               	movwf	??_isr
  1650  0007  080A               	movf	10,w
  1651  0008  00F1               	movwf	??_isr+1
  1652  0009  120A  118A  2A64   	ljmp	_isr
  1653                           
  1654                           	psect	config
  1655                           
  1656                           ;Config register CONFIG1 @ 0x2007
  1657                           ;	Oscillator Selection bits
  1658                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1659                           ;	Watchdog Timer Enable bit
  1660                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1661                           ;	Power-up Timer Enable bit
  1662                           ;	PWRTE = OFF, PWRT disabled
  1663                           ;	RE3/MCLR pin function select bit
  1664                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1665                           ;	Code Protection bit
  1666                           ;	CP = OFF, Program memory code protection is disabled
  1667                           ;	Data Code Protection bit
  1668                           ;	CPD = OFF, Data memory code protection is disabled
  1669                           ;	Brown Out Reset Selection bits
  1670                           ;	BOREN = OFF, BOR disabled
  1671                           ;	Internal External Switchover bit
  1672                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1673                           ;	Fail-Safe Clock Monitor Enabled bit
  1674                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1675                           ;	Low Voltage Programming Enable bit
  1676                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1677                           ;	In-Circuit Debugger Mode bit
  1678                           ;	DEBUG = 0x1, unprogrammed default
  1679  2007                     	org	8199
  1680  2007  20D4               	dw	8404
  1681                           
  1682                           ;Config register CONFIG2 @ 0x2008
  1683                           ;	Brown-out Reset Selection bit
  1684                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1685                           ;	Flash Program Memory Self Write Enable bits
  1686                           ;	WRT = OFF, Write protection off
  1687  2008                     	org	8200
  1688  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     21      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _ADC_1->___aldiv
    ___almod->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_1
    _ADC_1->___almod
    ___almod->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1937
                              _ADC_1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                           _canal_12
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _canal_12                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_1                                                4     4      0    1577
                                             17 BANK0      4     4      0
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     973
                                              6 BANK0     11     3      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_1
     ___aldiv
     ___almod
       ___aldiv (ARG)
   _setup
     _canal_12
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:22:34 2021

            _SSPSTATbits 0094                       l90 0239                       l84 0282  
                     l87 016B                       fsr 0004                      l106 024A  
                    l107 024F                      l275 004F                      l285 00D7  
                    l288 0180                      l298 01F2                      l716 027C  
                    l910 023B                      l920 003B                      l912 0242  
                    l930 0062                      l922 003E                      l914 0244  
                    l940 0086                      l932 006A                      l924 0042  
                    l916 0246                      l950 00B9                      l942 008F  
                    l934 0072                      l926 0053                      l918 0249  
                    l944 00A1                      l936 0075                      l952 00BF  
                    l928 005E                      l954 00C4                      l946 00AF  
                    l938 0082                      l956 00CF                      l948 00B0  
                    l992 01F3                      l994 01FB                      l996 01FD  
                    l998 01FE                      u310 00A1                      u311 00A0  
                    u240 0242                      u305 0088                      u241 0241  
                    u330 00BF                      u250 0042                      u331 00BE  
                    u315 009D                      u251 0041                      u340 00C4  
                    u260 0053                      u500 01AB                      u341 00C3  
                    u325 00B1                      u261 0052                      u501 01AA  
                    u270 0072                      u510 01BD                      u271 0071  
                    u511 01BC                      u290 0086                      u530 01DA  
                    u291 0085                      u531 01D9                      u515 01B9  
                    u540 01DF                      u460 0173                      u285 0077  
                    u541 01DE                      u525 01CC                      u461 0172  
                    u470 0184                      u550 025B                      u471 0183  
                    u551 025A                      u480 0197                      u481 0196  
                    u495 019C                      _isr 0264                      indf 0000  
                   l1000 01FF                     l1010 0206                     l1002 0202  
                   l1100 01A7                     l1020 020D                     l1012 0209  
                   l1004 0203                     l1102 01AB                     l1110 01DA  
                   l1030 0213                     l1022 020F                     l1014 020A  
                   l1006 0204                     l1112 01DF                     l1104 01BD  
                   l1120 00E7                     l1040 0221                     l1032 0214  
                   l1024 0210                     l1016 020B                     l1008 0205  
                   l1114 01EA                     l1106 01CB                     l1122 011A  
                   l1050 022A                     l1042 0224                     l1034 0218  
                   l1026 0211                     l1018 020C                     l1130 0250  
                   l1108 01D4                     l1124 014D                     l1052 022B  
                   l1044 0225                     l1036 0219                     l1028 0212  
                   l1132 0255                     l1126 0169                     l1118 00D8  
                   l1054 022E                     l1046 0226                     l1038 021C  
                   l1134 025B                     l1128 016A                     l1056 022F  
                   l1048 0229                     l1090 0173                     l1058 0230  
                   l1092 0184                     l1094 018F                     l1086 016C  
                   l1096 0197                     l1088 016F                     l1098 019A  
                   ?_isr 0070                     _IOCB 0096                     i1l72 026D  
                   _TMR0 0001                     _main 0250                     _temp 0045  
                   btemp 007E                     start 000C                    ??_isr 0070  
        __end_of___aldiv 00D8          __end_of___almod 01F3                    ?_main 0070  
                  _ADC_1 00D8                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u44_20 026A                    u44_21 0269  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _setup 01F3                    pclath 000A          __end_of_spiInit 0250  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0264                   ??_main 007B                   ?_ADC_1 0070  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1074 0264                   i1l1076 026A                   i1l1078 026C  
       __end_of_canal_12 0283                   _OSCCON 008F                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPBUF 0013                   _SSPCON 0014  
              ??___aldiv 007A                ??___almod 002E                   saved_w 007E  
              ??_spiInit 0075  __end_of__initialization 0037            __end_of_ADC_1 016C  
         __pcstackCOMMON 0070             __pidataBANK0 0283            __end_of_setup 023A  
                ??_ADC_1 0031           _OPTION_REGbits 0081                  ??_setup 0076  
             __pbssBANK0 0035               __pmaintext 0250               __pintentry 0004  
              ?_canal_12 0070                  _SSPSTAT 0094                  ___aldiv 003B  
                ___almod 016C                  __ptext1 01F3                  __ptext2 023A  
                __ptext3 027C                  __ptext4 00D8                  __ptext5 016C  
                __ptext6 003B                  __ptext7 0264               ??_canal_12 0072  
           __size_of_isr 0010         ___aldiv@dividend 0076                  _spiInit 023A  
                clrloop0 0275     end_of_initialization 0037         ___aldiv@quotient 0022  
              _TRISAbits 0085      start_initialization 000F              __end_of_isr 0274  
            __pdataBANK0 0045              __pbssCOMMON 007B                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_canal_12 0007                _adc_data1 0041  
               ?___aldiv 0072                 ?___almod 0026         ___almod@dividend 002A  
         __size_of_ADC_1 0094                 ?_spiInit 0072           __size_of_setup 0047  
        ___aldiv@divisor 0072     spiInit@sTransmitEdge 0074        interrupt_function 0004  
        ___aldiv@counter 0020                clear_ram0 0274                 _PIE1bits 008C  
     spiInit@sDataSample 0072                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                _str_pot_d 0035         __size_of___aldiv 009D  
       __size_of___almod 0087                 _adc_flag 007B                 _canal_12 027C  
             _ANSELHbits 0189         __size_of_spiInit 0016          ___almod@divisor 0026  
        ___almod@counter 002F            __size_of_main 0014             spiInit@sType 0075  
      spiInit@sClockIdle 0073               _INTCONbits 000B                 intlevel1 0000  
           ___aldiv@sign 0021             ___almod@sign 0030  

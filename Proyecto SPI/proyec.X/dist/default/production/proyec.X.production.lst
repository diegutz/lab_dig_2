

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:36:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	strings
   463  0441                     __pstrings:
   464  0441                     stringtab:
   465  0441                     __stringtab:
   466  0441                     stringcode:	
   467                           ;	String table - string pointers are 1 byte each
   468                           
   469  0441                     stringdir:
   470  0441  3004               	movlw	high stringdir
   471  0442  008A               	movwf	10
   472  0443  0804               	movf	4,w
   473  0444  0A84               	incf	4,f
   474  0445  0782               	addwf	2,f
   475  0446                     __stringbase:
   476  0446  3400               	retlw	0
   477  0447                     __end_of__stringtab:
   478  0447                     _dpowers:
   479  0447  3401               	retlw	1
   480  0448  3400               	retlw	0
   481  0449  340A               	retlw	10
   482  044A  3400               	retlw	0
   483  044B  3464               	retlw	100
   484  044C  3400               	retlw	0
   485  044D  34E8               	retlw	232
   486  044E  3403               	retlw	3
   487  044F  3410               	retlw	16
   488  0450  3427               	retlw	39
   489  0451                     __end_of_dpowers:
   490  0013                     _SSPBUF	set	19
   491  0014                     _SSPCON	set	20
   492  0018                     _RCSTAbits	set	24
   493  0009                     _PORTEbits	set	9
   494  0001                     _TMR0	set	1
   495  000B                     _INTCONbits	set	11
   496  0009                     _PORTE	set	9
   497  0008                     _PORTD	set	8
   498  0007                     _PORTC	set	7
   499  0006                     _PORTB	set	6
   500  0005                     _PORTA	set	5
   501  001A                     _RCREG	set	26
   502  0019                     _TXREG	set	25
   503  000C                     _PIR1bits	set	12
   504  0005                     _PORTAbits	set	5
   505  0094                     _SSPSTATbits	set	148
   506  0094                     _SSPSTAT	set	148
   507  0098                     _TXSTAbits	set	152
   508  0099                     _SPBRG	set	153
   509  009A                     _SPBRGH	set	154
   510  0081                     _OPTION_REGbits	set	129
   511  008F                     _OSCCON	set	143
   512  0096                     _IOCB	set	150
   513  0089                     _TRISE	set	137
   514  0088                     _TRISD	set	136
   515  0087                     _TRISC	set	135
   516  0086                     _TRISB	set	134
   517  0085                     _TRISA	set	133
   518  008C                     _PIE1bits	set	140
   519  043B                     _TRISC3	set	1083
   520  043D                     _TRISC5	set	1085
   521  0189                     _ANSELH	set	393
   522  0188                     _ANSEL	set	392
   523  0451                     STR_3:
   524  0451  3420               	retlw	32	;' '
   525  0452  3420               	retlw	32	;' '
   526  0453  3453               	retlw	83	;'S'
   527  0454  3431               	retlw	49	;'1'
   528  0455  343A               	retlw	58	;':'
   529  0456  3420               	retlw	32	;' '
   530  0457  3420               	retlw	32	;' '
   531  0458  3453               	retlw	83	;'S'
   532  0459  3432               	retlw	50	;'2'
   533  045A  343A               	retlw	58	;':'
   534  045B  3420               	retlw	32	;' '
   535  045C  3420               	retlw	32	;' '
   536  045D  3453               	retlw	83	;'S'
   537  045E  3433               	retlw	51	;'3'
   538  045F  343A               	retlw	58	;':'
   539  0460  3420               	retlw	32	;' '
   540  0461  3400               	retlw	0
   541  0462                     STR_1:
   542  0462  3441               	retlw	65	;'A'
   543  0463  3425               	retlw	37	;'%'
   544  0464  342E               	retlw	46	;'.'
   545  0465  3433               	retlw	51	;'3'
   546  0466  3469               	retlw	105	;'i'
   547  0467  3456               	retlw	86	;'V'
   548  0468  3400               	retlw	0
   549  0469                     STR_2:
   550  0469  3442               	retlw	66	;'B'
   551  046A  3425               	retlw	37	;'%'
   552  046B  342E               	retlw	46	;'.'
   553  046C  3433               	retlw	51	;'3'
   554  046D  3469               	retlw	105	;'i'
   555  046E  3456               	retlw	86	;'V'
   556  046F  3400               	retlw	0
   557  0470                     STR_4:
   558  0470  3425               	retlw	37	;'%'
   559  0471  342E               	retlw	46	;'.'
   560  0472  3433               	retlw	51	;'3'
   561  0473  3469               	retlw	105	;'i'
   562  0474  3400               	retlw	0
   563                           
   564                           	psect	cinit
   565  0011                     start_initialization:	
   566                           ; #config settings
   567                           
   568  0011                     __initialization:
   569                           
   570                           ; Clear objects allocated to COMMON
   571  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   572  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   573  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   574  0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   575                           
   576                           ; Clear objects allocated to BANK0
   577  0015  1383               	bcf	3,7	;select IRP bank0
   578  0016  3040               	movlw	low __pbssBANK0
   579  0017  0084               	movwf	4
   580  0018  3055               	movlw	low (__pbssBANK0+21)
   581  0019  120A  118A  2563  120A  118A  	fcall	clear_ram0
   582  001E                     end_of_initialization:	
   583                           ;End of C runtime variable initialization code
   584                           
   585  001E                     __end_of__initialization:
   586  001E  0183               	clrf	3
   587  001F  120A  118A  2987   	ljmp	_main	;jump to C main() function
   588                           
   589                           	psect	bssCOMMON
   590  0076                     __pbssCOMMON:
   591  0076                     _eusart_flag:
   592  0076                     	ds	1
   593  0077                     _str_pos:
   594  0077                     	ds	1
   595  0078                     _adc_data2:
   596  0078                     	ds	1
   597  0079                     _adc_data1:
   598  0079                     	ds	1
   599                           
   600                           	psect	bssBANK0
   601  0040                     __pbssBANK0:
   602  0040                     _ss:
   603  0040                     	ds	2
   604  0042                     _ban_an2:
   605  0042                     	ds	2
   606  0044                     _ban_an1:
   607  0044                     	ds	2
   608  0046                     _adc_flag:
   609  0046                     	ds	1
   610  0047                     _uart_cont:
   611  0047                     	ds	1
   612  0048                     _uart_data:
   613  0048                     	ds	1
   614  0049                     _cont:
   615  0049                     	ds	1
   616  004A                     _str_pot_a:
   617  004A                     	ds	6
   618  0050                     _str_pot_b:
   619  0050                     	ds	5
   620                           
   621                           	psect	clrtext
   622  0563                     clear_ram0:	
   623                           ;	Called with FSR containing the base address, and
   624                           ;	W with the last address+1
   625                           
   626  0563  0064               	clrwdt	;clear the watchdog before getting into this loop
   627  0564                     clrloop0:
   628  0564  0180               	clrf	0	;clear RAM location pointed to by FSR
   629  0565  0A84               	incf	4,f	;increment pointer
   630  0566  0604               	xorwf	4,w	;XOR with final address
   631  0567  1903               	btfsc	3,2	;have we reached the end yet?
   632  0568  3400               	retlw	0	;all done for this memory range, return
   633  0569  0604               	xorwf	4,w	;XOR again to restore value
   634  056A  2D64               	goto	clrloop0	;do the next byte
   635                           
   636                           	psect	cstackCOMMON
   637  0070                     __pcstackCOMMON:
   638  0070                     ?_isdigit:
   639  0070                     ?_setup:	
   640                           ; 1 bit 
   641                           
   642  0070                     ?_spiRead:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_display:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_lcd_write_string:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_lcd_write_char:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_lcd_init:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_lcd_cmd:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_eusart_init_tx:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_eusart_enable_tx_isr:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_eusart_init_rx:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_eusart_enable_rx_isr:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_lcd_port:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_main:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_isr:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ??_isr:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_spiReceiveWait:	
   685                           ; 1 bytes @ 0x0
   686                           
   687                           
   688                           ; 1 bytes @ 0x0
   689  0070                     	ds	4
   690  0074                     ??_spiRead:
   691  0074                     ??_eusart_init_tx:	
   692                           ; 1 bytes @ 0x4
   693                           
   694  0074                     ??_eusart_enable_tx_isr:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0074                     ??_eusart_init_rx:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     ??_eusart_enable_rx_isr:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??_spiInit:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??_lcd_port:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     ??_isdigit:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     ??_spiReceiveWait:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ?___bmul:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     ??___lwdiv:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     lcd_port@a:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0074                     spiInit@sType:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0074                     ___bmul@multiplicand:	
   728                           ; 1 bytes @ 0x4
   729                           
   730  0074                     _isdigit$1071:	
   731                           ; 1 bytes @ 0x4
   732                           
   733                           
   734                           ; 1 bytes @ 0x4
   735  0074                     	ds	1
   736  0075                     ??___bmul:
   737  0075                     ??___lwmod:	
   738                           ; 1 bytes @ 0x5
   739                           
   740  0075                     lcd_cmd@cmd:	
   741                           ; 1 bytes @ 0x5
   742                           
   743  0075                     lcd_write_char@data:	
   744                           ; 1 bytes @ 0x5
   745                           
   746  0075                     isdigit@c:	
   747                           ; 1 bytes @ 0x5
   748                           
   749                           
   750                           ; 1 bytes @ 0x5
   751  0075                     	ds	1
   752  0076                     ??_setup:
   753  0076                     ??_lcd_move_cursor:	
   754                           ; 1 bytes @ 0x6
   755                           
   756  0076                     ??_lcd_write_string:	
   757                           ; 1 bytes @ 0x6
   758                           
   759                           
   760                           	psect	cstackBANK0
   761  0020                     __pcstackBANK0:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  0020                     ??_lcd_write_char:
   765  0020                     ??_lcd_cmd:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ?_spiInit:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0020                     ?___lwdiv:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0020                     spiInit@sDataSample:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0020                     ___bmul@product:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0020                     ___lwdiv@divisor:	
   781                           ; 1 bytes @ 0x0
   782                           
   783                           
   784                           ; 2 bytes @ 0x0
   785  0020                     	ds	1
   786  0021                     spiInit@sClockIdle:
   787  0021                     ___bmul@multiplier:	
   788                           ; 1 bytes @ 0x1
   789                           
   790                           
   791                           ; 1 bytes @ 0x1
   792  0021                     	ds	1
   793  0022                     ?_lcd_move_cursor:
   794  0022                     ??_lcd_init:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0022                     lcd_move_cursor@col:	
   798                           ; 1 bytes @ 0x2
   799                           
   800  0022                     lcd_write_string@a:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0022                     spiInit@sTransmitEdge:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0022                     ___lwdiv@dividend:	
   807                           ; 1 bytes @ 0x2
   808                           
   809                           
   810                           ; 2 bytes @ 0x2
   811  0022                     	ds	1
   812  0023                     lcd_move_cursor@row:
   813  0023                     lcd_write_string@i:	
   814                           ; 1 bytes @ 0x3
   815                           
   816                           
   817                           ; 2 bytes @ 0x3
   818  0023                     	ds	1
   819  0024                     ___lwdiv@counter:
   820                           
   821                           ; 1 bytes @ 0x4
   822  0024                     	ds	1
   823  0025                     ___lwdiv@quotient:
   824                           
   825                           ; 2 bytes @ 0x5
   826  0025                     	ds	2
   827  0027                     ?___lwmod:
   828  0027                     ___lwmod@divisor:	
   829                           ; 2 bytes @ 0x7
   830                           
   831                           
   832                           ; 2 bytes @ 0x7
   833  0027                     	ds	2
   834  0029                     ___lwmod@dividend:
   835                           
   836                           ; 2 bytes @ 0x9
   837  0029                     	ds	2
   838  002B                     ___lwmod@counter:
   839                           
   840                           ; 1 bytes @ 0xB
   841  002B                     	ds	1
   842  002C                     ?_sprintf:
   843  002C                     sprintf@f:	
   844                           ; 2 bytes @ 0xC
   845                           
   846                           
   847                           ; 1 bytes @ 0xC
   848  002C                     	ds	3
   849  002F                     ??_sprintf:
   850                           
   851                           ; 1 bytes @ 0xF
   852  002F                     	ds	3
   853  0032                     sprintf@ap:
   854                           
   855                           ; 1 bytes @ 0x12
   856  0032                     	ds	1
   857  0033                     sprintf@flag:
   858                           
   859                           ; 1 bytes @ 0x13
   860  0033                     	ds	1
   861  0034                     sprintf@val:
   862                           
   863                           ; 2 bytes @ 0x14
   864  0034                     	ds	2
   865  0036                     sprintf@sp:
   866                           
   867                           ; 1 bytes @ 0x16
   868  0036                     	ds	1
   869  0037                     sprintf@prec:
   870                           
   871                           ; 1 bytes @ 0x17
   872  0037                     	ds	1
   873  0038                     sprintf@c:
   874                           
   875                           ; 1 bytes @ 0x18
   876  0038                     	ds	1
   877  0039                     ??_display:
   878                           
   879                           ; 1 bytes @ 0x19
   880  0039                     	ds	1
   881  003A                     display@str:
   882                           
   883                           ; 3 bytes @ 0x1A
   884  003A                     	ds	3
   885  003D                     ??_main:
   886                           
   887                           ; 1 bytes @ 0x1D
   888  003D                     	ds	3
   889                           
   890                           	psect	maintext
   891  0187                     __pmaintext:	
   892 ;;
   893 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   894 ;;
   895 ;; *************** function _main *****************
   896 ;; Defined at:
   897 ;;		line 86 in file "proyecto.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : B00/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       3       0       0       0
   914 ;;      Totals:         0       3       0       0       0
   915 ;;Total ram usage:        3 bytes
   916 ;; Hardware stack levels required when called:    5
   917 ;; This function calls:
   918 ;;		_display
   919 ;;		_setup
   920 ;;		_spiRead
   921 ;;		_sprintf
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _main
   929  0187                     _main:
   930  0187                     l2087:	
   931                           ;incstack = 0
   932                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   933                           
   934                           
   935                           ;proyecto.c: 88:     setup();
   936  0187  120A  118A  2329  120A  118A  	fcall	_setup
   937  018C                     l2089:
   938                           
   939                           ;proyecto.c: 90:     PORTAbits.RA0 = 1;
   940  018C  1283               	bcf	3,5	;RP0=0, select bank0
   941  018D  1303               	bcf	3,6	;RP1=0, select bank0
   942  018E  1405               	bsf	5,0	;volatile
   943  018F                     l2091:
   944                           
   945                           ;proyecto.c: 91:     PORTAbits.RA1 = 1;
   946  018F  1485               	bsf	5,1	;volatile
   947  0190                     l2093:
   948                           
   949                           ;proyecto.c: 92:     PORTAbits.RA2 = 1;
   950  0190  1505               	bsf	5,2	;volatile
   951  0191                     l2095:
   952                           
   953                           ;proyecto.c: 94:     {;proyecto.c: 95:         PORTAbits.RA0 = 0;
   954  0191  1005               	bcf	5,0	;volatile
   955  0192                     l2097:
   956                           
   957                           ;proyecto.c: 96:         _delay((unsigned long)((5)*(4000000/4000.0)));
   958  0192  3007               	movlw	7
   959  0193  1283               	bcf	3,5	;RP0=0, select bank0
   960  0194  1303               	bcf	3,6	;RP1=0, select bank0
   961  0195  00BE               	movwf	??_main+1
   962  0196  307C               	movlw	124
   963  0197  00BD               	movwf	??_main
   964  0198                     u1117:
   965  0198  0BBD               	decfsz	??_main,f
   966  0199  2998               	goto	u1117
   967  019A  0BBE               	decfsz	??_main+1,f
   968  019B  2998               	goto	u1117
   969  019C  0000               	nop
   970  019D                     l2099:
   971                           
   972                           ;proyecto.c: 97:         adc_data1 = spiRead();
   973  019D  120A  118A  255A  120A  118A  	fcall	_spiRead
   974  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   975  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   976  01A4  00BD               	movwf	??_main
   977  01A5  083D               	movf	??_main,w
   978  01A6  00F9               	movwf	_adc_data1
   979                           
   980                           ;proyecto.c: 98:         _delay((unsigned long)((5)*(4000000/4000.0)));
   981  01A7  3007               	movlw	7
   982  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   983  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   984  01AA  00BE               	movwf	??_main+1
   985  01AB  307C               	movlw	124
   986  01AC  00BD               	movwf	??_main
   987  01AD                     u1127:
   988  01AD  0BBD               	decfsz	??_main,f
   989  01AE  29AD               	goto	u1127
   990  01AF  0BBE               	decfsz	??_main+1,f
   991  01B0  29AD               	goto	u1127
   992  01B1  0000               	nop
   993  01B2                     l2101:
   994                           
   995                           ;proyecto.c: 99:         PORTAbits.RA0 = 1;
   996  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   997  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   998  01B4  1405               	bsf	5,0	;volatile
   999  01B5                     l2103:
  1000                           
  1001                           ;proyecto.c: 100:         PORTAbits.RA1 = 0;
  1002  01B5  1085               	bcf	5,1	;volatile
  1003                           
  1004                           ;proyecto.c: 101:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1005  01B6  3007               	movlw	7
  1006  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1007  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1008  01B9  00BE               	movwf	??_main+1
  1009  01BA  307C               	movlw	124
  1010  01BB  00BD               	movwf	??_main
  1011  01BC                     u1137:
  1012  01BC  0BBD               	decfsz	??_main,f
  1013  01BD  29BC               	goto	u1137
  1014  01BE  0BBE               	decfsz	??_main+1,f
  1015  01BF  29BC               	goto	u1137
  1016  01C0  0000               	nop
  1017  01C1                     l2105:
  1018                           
  1019                           ;proyecto.c: 102:         cont = spiRead();
  1020  01C1  120A  118A  255A  120A  118A  	fcall	_spiRead
  1021  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1022  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1023  01C8  00BD               	movwf	??_main
  1024  01C9  083D               	movf	??_main,w
  1025  01CA  00C9               	movwf	_cont
  1026  01CB                     l2107:
  1027                           
  1028                           ;proyecto.c: 103:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1029  01CB  3007               	movlw	7
  1030  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1031  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1032  01CE  00BE               	movwf	??_main+1
  1033  01CF  307C               	movlw	124
  1034  01D0  00BD               	movwf	??_main
  1035  01D1                     u1147:
  1036  01D1  0BBD               	decfsz	??_main,f
  1037  01D2  29D1               	goto	u1147
  1038  01D3  0BBE               	decfsz	??_main+1,f
  1039  01D4  29D1               	goto	u1147
  1040  01D5  0000               	nop
  1041  01D6                     l2109:
  1042                           
  1043                           ;proyecto.c: 104:         PORTAbits.RA1 = 1;
  1044  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1045  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1046  01D8  1485               	bsf	5,1	;volatile
  1047  01D9                     l2111:
  1048                           
  1049                           ;proyecto.c: 105:         PORTAbits.RA2 = 0;
  1050  01D9  1105               	bcf	5,2	;volatile
  1051  01DA                     l2113:
  1052                           
  1053                           ;proyecto.c: 106:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1054  01DA  3007               	movlw	7
  1055  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1056  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1057  01DD  00BE               	movwf	??_main+1
  1058  01DE  307C               	movlw	124
  1059  01DF  00BD               	movwf	??_main
  1060  01E0                     u1157:
  1061  01E0  0BBD               	decfsz	??_main,f
  1062  01E1  29E0               	goto	u1157
  1063  01E2  0BBE               	decfsz	??_main+1,f
  1064  01E3  29E0               	goto	u1157
  1065  01E4  0000               	nop
  1066  01E5                     l2115:
  1067                           
  1068                           ;proyecto.c: 107:         adc_data2 = spiRead();
  1069  01E5  120A  118A  255A  120A  118A  	fcall	_spiRead
  1070  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1071  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1072  01EC  00BD               	movwf	??_main
  1073  01ED  083D               	movf	??_main,w
  1074  01EE  00F8               	movwf	_adc_data2
  1075                           
  1076                           ;proyecto.c: 108:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1077  01EF  3007               	movlw	7
  1078  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1079  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1080  01F2  00BE               	movwf	??_main+1
  1081  01F3  307C               	movlw	124
  1082  01F4  00BD               	movwf	??_main
  1083  01F5                     u1167:
  1084  01F5  0BBD               	decfsz	??_main,f
  1085  01F6  29F5               	goto	u1167
  1086  01F7  0BBE               	decfsz	??_main+1,f
  1087  01F8  29F5               	goto	u1167
  1088  01F9  0000               	nop
  1089  01FA                     l2117:
  1090                           
  1091                           ;proyecto.c: 109:         PORTAbits.RA2 = 1;
  1092  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1093  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1094  01FC  1505               	bsf	5,2	;volatile
  1095  01FD                     l2119:
  1096                           
  1097                           ;proyecto.c: 110:         sprintf(str_pot_a, "A%.3iV", adc_data1<<1);
  1098  01FD  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1099  01FE  00BD               	movwf	??_main
  1100  01FF  083D               	movf	??_main,w
  1101  0200  00AC               	movwf	sprintf@f
  1102  0201  0879               	movf	_adc_data1,w
  1103  0202  00BE               	movwf	??_main+1
  1104  0203  01BF               	clrf	??_main+2
  1105  0204  1003               	clrc
  1106  0205  0D3E               	rlf	??_main+1,w
  1107  0206  00AD               	movwf	?_sprintf+1
  1108  0207  0D3F               	rlf	??_main+2,w
  1109  0208  00AE               	movwf	?_sprintf+2
  1110  0209  304A               	movlw	(low (_str_pot_a| 0))& (0+255)
  1111  020A  120A  118A  2022  120A  118A  	fcall	_sprintf
  1112  020F                     l2121:
  1113                           
  1114                           ;proyecto.c: 111:         sprintf(str_pot_b, "B%.3iV", adc_data2<<1);
  1115  020F  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1116  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0212  00BD               	movwf	??_main
  1119  0213  083D               	movf	??_main,w
  1120  0214  00AC               	movwf	sprintf@f
  1121  0215  0878               	movf	_adc_data2,w
  1122  0216  00BE               	movwf	??_main+1
  1123  0217  01BF               	clrf	??_main+2
  1124  0218  1003               	clrc
  1125  0219  0D3E               	rlf	??_main+1,w
  1126  021A  00AD               	movwf	?_sprintf+1
  1127  021B  0D3F               	rlf	??_main+2,w
  1128  021C  00AE               	movwf	?_sprintf+2
  1129  021D  3050               	movlw	(low (_str_pot_b| 0))& (0+255)
  1130  021E  120A  118A  2022  120A  118A  	fcall	_sprintf
  1131  0223                     l2123:
  1132                           
  1133                           ;proyecto.c: 113:         display();
  1134  0223  120A  118A  2232  120A  118A  	fcall	_display
  1135  0228                     l2125:
  1136                           
  1137                           ;proyecto.c: 115:         uart_data = adc_data1;
  1138  0228  0879               	movf	_adc_data1,w
  1139  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1140  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1141  022B  00BD               	movwf	??_main
  1142  022C  083D               	movf	??_main,w
  1143  022D  00C8               	movwf	_uart_data
  1144  022E  2991               	goto	l2095
  1145  022F  120A  118A  280E   	ljmp	start
  1146  0232                     __end_of_main:
  1147                           
  1148                           	psect	text1
  1149  055A                     __ptext1:	
  1150 ;; *************** function _spiRead *****************
  1151 ;; Defined at:
  1152 ;;		line 38 in file "SPI.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      unsigned char 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    2
  1173 ;; This function calls:
  1174 ;;		_spiReceiveWait
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _spiRead
  1182  055A                     _spiRead:
  1183  055A                     l1655:	
  1184                           ;incstack = 0
  1185                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1186                           
  1187                           
  1188                           ;SPI.c: 40:     spiReceiveWait();
  1189  055A  120A  118A  256B  120A  118A  	fcall	_spiReceiveWait
  1190  055F                     l1657:
  1191                           
  1192                           ;SPI.c: 41:     return(SSPBUF);
  1193  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0561  0813               	movf	19,w	;volatile
  1196  0562                     l231:
  1197  0562  0008               	return
  1198  0563                     __end_of_spiRead:
  1199                           
  1200                           	psect	text2
  1201  056B                     __ptext2:	
  1202 ;; *************** function _spiReceiveWait *****************
  1203 ;; Defined at:
  1204 ;;		line 20 in file "SPI.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		None
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_spiRead
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _spiReceiveWait
  1234  056B                     _spiReceiveWait:
  1235  056B                     l1593:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _spiReceiveWait: []
  1238                           
  1239  056B                     l217:	
  1240                           ;SPI.c: 22:     while ( !SSPSTATbits.BF );
  1241                           
  1242  056B  1683               	bsf	3,5	;RP0=1, select bank1
  1243  056C  1303               	bcf	3,6	;RP1=0, select bank1
  1244  056D  1C14               	btfss	20,0	;volatile
  1245  056E  2D70               	goto	u771
  1246  056F  2D71               	goto	u770
  1247  0570                     u771:
  1248  0570  2D6B               	goto	l217
  1249  0571                     u770:
  1250  0571                     l220:
  1251  0571  0008               	return
  1252  0572                     __end_of_spiReceiveWait:
  1253                           
  1254                           	psect	text3
  1255  0329                     __ptext3:	
  1256 ;; *************** function _setup *****************
  1257 ;; Defined at:
  1258 ;;		line 182 in file "proyecto.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    4
  1279 ;; This function calls:
  1280 ;;		_eusart_enable_rx_isr
  1281 ;;		_eusart_enable_tx_isr
  1282 ;;		_eusart_init_rx
  1283 ;;		_eusart_init_tx
  1284 ;;		_lcd_cmd
  1285 ;;		_lcd_init
  1286 ;;		_spiInit
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _setup
  1294  0329                     _setup:
  1295  0329                     l1987:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1298                           
  1299                           
  1300                           ;proyecto.c: 184:     ANSEL = 0x00;
  1301  0329  1683               	bsf	3,5	;RP0=1, select bank3
  1302  032A  1703               	bsf	3,6	;RP1=1, select bank3
  1303  032B  0188               	clrf	8	;volatile
  1304                           
  1305                           ;proyecto.c: 185:     ANSELH = 0x00;
  1306  032C  0189               	clrf	9	;volatile
  1307                           
  1308                           ;proyecto.c: 187:     TRISA = 0x00;
  1309  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1310  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1311  032F  0185               	clrf	5	;volatile
  1312                           
  1313                           ;proyecto.c: 188:     TRISB = 0x00;
  1314  0330  0186               	clrf	6	;volatile
  1315  0331                     l1989:
  1316                           
  1317                           ;proyecto.c: 189:     TRISC = 0x80;
  1318  0331  3080               	movlw	128
  1319  0332  0087               	movwf	7	;volatile
  1320  0333                     l1991:
  1321                           
  1322                           ;proyecto.c: 190:     TRISD = 0x00;
  1323  0333  0188               	clrf	8	;volatile
  1324  0334                     l1993:
  1325                           
  1326                           ;proyecto.c: 191:     TRISE = 0x00;
  1327  0334  0189               	clrf	9	;volatile
  1328  0335                     l1995:
  1329                           
  1330                           ;proyecto.c: 193:     PORTA = 0;
  1331  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0337  0185               	clrf	5	;volatile
  1334  0338                     l1997:
  1335                           
  1336                           ;proyecto.c: 194:     PORTB = 0;
  1337  0338  0186               	clrf	6	;volatile
  1338  0339                     l1999:
  1339                           
  1340                           ;proyecto.c: 195:     PORTC = 0;
  1341  0339  0187               	clrf	7	;volatile
  1342  033A                     l2001:
  1343                           
  1344                           ;proyecto.c: 196:     PORTD = 0;
  1345  033A  0188               	clrf	8	;volatile
  1346  033B                     l2003:
  1347                           
  1348                           ;proyecto.c: 197:     PORTE = 0;
  1349  033B  0189               	clrf	9	;volatile
  1350  033C                     l2005:
  1351                           
  1352                           ;proyecto.c: 200:     IOCB = 0x00;
  1353  033C  1683               	bsf	3,5	;RP0=1, select bank1
  1354  033D  1303               	bcf	3,6	;RP1=0, select bank1
  1355  033E  0196               	clrf	22	;volatile
  1356  033F                     l2007:
  1357                           
  1358                           ;proyecto.c: 201:     INTCONbits.RBIE = 0;
  1359  033F  118B               	bcf	11,3	;volatile
  1360  0340                     l2009:
  1361                           
  1362                           ;proyecto.c: 202:     INTCONbits.T0IE = 0;
  1363  0340  128B               	bcf	11,5	;volatile
  1364  0341                     l2011:
  1365                           
  1366                           ;proyecto.c: 203:     INTCONbits.PEIE = 1;
  1367  0341  170B               	bsf	11,6	;volatile
  1368  0342                     l2013:
  1369                           
  1370                           ;proyecto.c: 204:     INTCONbits.GIE = 1;
  1371  0342  178B               	bsf	11,7	;volatile
  1372  0343                     l2015:
  1373                           
  1374                           ;proyecto.c: 206:     OSCCON = 0b01100001;
  1375  0343  3061               	movlw	97
  1376  0344  008F               	movwf	15	;volatile
  1377  0345                     l2017:
  1378                           
  1379                           ;proyecto.c: 208:     OPTION_REGbits.T0CS = 0;
  1380  0345  1281               	bcf	1,5	;volatile
  1381  0346                     l2019:
  1382                           
  1383                           ;proyecto.c: 209:     OPTION_REGbits.PSA = 0;
  1384  0346  1181               	bcf	1,3	;volatile
  1385  0347                     l2021:
  1386                           
  1387                           ;proyecto.c: 210:     OPTION_REGbits.PS2 = 0;
  1388  0347  1101               	bcf	1,2	;volatile
  1389  0348                     l2023:
  1390                           
  1391                           ;proyecto.c: 211:     OPTION_REGbits.PS1 = 0;
  1392  0348  1081               	bcf	1,1	;volatile
  1393  0349                     l2025:
  1394                           
  1395                           ;proyecto.c: 212:     OPTION_REGbits.PS0 = 1;
  1396  0349  1401               	bsf	1,0	;volatile
  1397  034A                     l2027:
  1398                           
  1399                           ;proyecto.c: 214:     TMR0 = 6;;
  1400  034A  3006               	movlw	6
  1401  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1402  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1403  034D  0081               	movwf	1	;volatile
  1404  034E                     l2029:
  1405                           
  1406                           ;proyecto.c: 216:     INTCONbits.T0IF = 0;
  1407  034E  110B               	bcf	11,2	;volatile
  1408  034F                     l2031:
  1409                           
  1410                           ;proyecto.c: 221:     lcd_init();
  1411  034F  120A  118A  22D2  120A  118A  	fcall	_lcd_init
  1412  0354                     l2033:
  1413                           
  1414                           ;proyecto.c: 222:     lcd_cmd(0x0c);
  1415  0354  300C               	movlw	12
  1416  0355  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1417  035A                     l2035:
  1418                           
  1419                           ;proyecto.c: 224:     eusart_init_tx();
  1420  035A  120A  118A  254B  120A  118A  	fcall	_eusart_init_tx
  1421  035F                     l2037:
  1422                           
  1423                           ;proyecto.c: 225:     eusart_enable_tx_isr();
  1424  035F  120A  118A  2572  120A  118A  	fcall	_eusart_enable_tx_isr
  1425  0364                     l2039:
  1426                           
  1427                           ;proyecto.c: 227:     eusart_init_rx();
  1428  0364  120A  118A  253A  120A  118A  	fcall	_eusart_init_rx
  1429  0369                     l2041:
  1430                           
  1431                           ;proyecto.c: 228:     eusart_enable_rx_isr();
  1432  0369  120A  118A  2578  120A  118A  	fcall	_eusart_enable_rx_isr
  1433  036E                     l2043:
  1434                           
  1435                           ;proyecto.c: 230:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW, SPI_IDLE_2_ACTIVE);
  1436  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1437  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0370  01A0               	clrf	spiInit@sDataSample
  1439  0371  01A1               	clrf	spiInit@sClockIdle
  1440  0372  01A2               	clrf	spiInit@sTransmitEdge
  1441  0373  3020               	movlw	32
  1442  0374  120A  118A  249E  120A  118A  	fcall	_spiInit
  1443  0379                     l124:
  1444  0379  0008               	return
  1445  037A                     __end_of_setup:
  1446                           
  1447                           	psect	text4
  1448  049E                     __ptext4:	
  1449 ;; *************** function _spiInit *****************
  1450 ;; Defined at:
  1451 ;;		line 3 in file "SPI.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  sType           1    wreg     enum E1264
  1454 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1455 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1456 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  sType           1    4[COMMON] enum E1264
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       3       0       0       0
  1469 ;;      Locals:         1       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0
  1471 ;;      Totals:         1       3       0       0       0
  1472 ;;Total ram usage:        4 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_setup
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _spiInit
  1484  049E                     _spiInit:
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1488                           ;spiInit@sType stored from wreg
  1489  049E  00F4               	movwf	spiInit@sType
  1490  049F                     l1977:
  1491                           
  1492                           ;SPI.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 4: {;SPI.c: 5:     TRISC5 = 0;
  1493  049F  1683               	bsf	3,5	;RP0=1, select bank1
  1494  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  1495  04A1  1287               	bcf	7,5	;volatile
  1496                           
  1497                           ;SPI.c: 6:     if(sType & 0b00000100)
  1498  04A2  1D74               	btfss	spiInit@sType,2
  1499  04A3  2CA5               	goto	u1101
  1500  04A4  2CA6               	goto	u1100
  1501  04A5                     u1101:
  1502  04A5  2CAE               	goto	l1983
  1503  04A6                     u1100:
  1504  04A6                     l1979:
  1505                           
  1506                           ;SPI.c: 7:     {;SPI.c: 8:         SSPSTAT = sTransmitEdge;
  1507  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1508  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1509  04A8  0822               	movf	spiInit@sTransmitEdge,w
  1510  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1511  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1512  04AB  0094               	movwf	20	;volatile
  1513  04AC                     l1981:
  1514                           
  1515                           ;SPI.c: 9:         TRISC3 = 1;
  1516  04AC  1587               	bsf	7,3	;volatile
  1517                           
  1518                           ;SPI.c: 10:     }
  1519  04AD  2CB6               	goto	l213
  1520  04AE                     l1983:
  1521                           
  1522                           ;SPI.c: 12:     {;SPI.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1523  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1524  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1525  04B0  0820               	movf	spiInit@sDataSample,w
  1526  04B1  0422               	iorwf	spiInit@sTransmitEdge,w
  1527  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  1528  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  1529  04B4  0094               	movwf	20	;volatile
  1530  04B5                     l1985:
  1531                           
  1532                           ;SPI.c: 14:         TRISC3 = 0;
  1533  04B5  1187               	bcf	7,3	;volatile
  1534  04B6                     l213:	
  1535                           ;SPI.c: 15:     }
  1536                           
  1537                           
  1538                           ;SPI.c: 17:     SSPCON = sType | sClockIdle;
  1539  04B6  0874               	movf	spiInit@sType,w
  1540  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1541  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1542  04B9  0421               	iorwf	spiInit@sClockIdle,w
  1543  04BA  0094               	movwf	20	;volatile
  1544  04BB                     l214:
  1545  04BB  0008               	return
  1546  04BC                     __end_of_spiInit:
  1547                           
  1548                           	psect	text5
  1549  02D2                     __ptext5:	
  1550 ;; *************** function _lcd_init *****************
  1551 ;; Defined at:
  1552 ;;		line 4 in file "lcd.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          0       2       0       0       0
  1569 ;;      Totals:         0       2       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    3
  1573 ;; This function calls:
  1574 ;;		_lcd_cmd
  1575 ;;		_lcd_port
  1576 ;; This function is called by:
  1577 ;;		_setup
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _lcd_init
  1583  02D2                     _lcd_init:
  1584  02D2                     l1967:	
  1585                           ;incstack = 0
  1586                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1587                           
  1588                           
  1589                           ;lcd.c: 6:     lcd_port(0x00);
  1590  02D2  3000               	movlw	0
  1591  02D3  120A  118A  257E  120A  118A  	fcall	_lcd_port
  1592  02D8                     l1969:
  1593                           
  1594                           ;lcd.c: 7:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1595  02D8  301A               	movlw	26
  1596  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1597  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1598  02DB  00A3               	movwf	??_lcd_init+1
  1599  02DC  30F7               	movlw	247
  1600  02DD  00A2               	movwf	??_lcd_init
  1601  02DE                     u1177:
  1602  02DE  0BA2               	decfsz	??_lcd_init,f
  1603  02DF  2ADE               	goto	u1177
  1604  02E0  0BA3               	decfsz	??_lcd_init+1,f
  1605  02E1  2ADE               	goto	u1177
  1606  02E2  2AE3               	nop2
  1607  02E3                     l1971:
  1608                           
  1609                           ;lcd.c: 9:     lcd_cmd(0x30);
  1610  02E3  3030               	movlw	48
  1611  02E4  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1612                           
  1613                           ;lcd.c: 10:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1614  02E9  3007               	movlw	7
  1615  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1616  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1617  02EC  00A3               	movwf	??_lcd_init+1
  1618  02ED  307C               	movlw	124
  1619  02EE  00A2               	movwf	??_lcd_init
  1620  02EF                     u1187:
  1621  02EF  0BA2               	decfsz	??_lcd_init,f
  1622  02F0  2AEF               	goto	u1187
  1623  02F1  0BA3               	decfsz	??_lcd_init+1,f
  1624  02F2  2AEF               	goto	u1187
  1625  02F3  0000               	nop
  1626  02F4                     l1973:
  1627                           
  1628                           ;lcd.c: 12:     lcd_cmd(0x30);
  1629  02F4  3030               	movlw	48
  1630  02F5  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1631  02FA                     l1975:
  1632                           
  1633                           ;lcd.c: 13:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1634  02FA  300F               	movlw	15
  1635  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1636  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1637  02FD  00A3               	movwf	??_lcd_init+1
  1638  02FE  3047               	movlw	71
  1639  02FF  00A2               	movwf	??_lcd_init
  1640  0300                     u1197:
  1641  0300  0BA2               	decfsz	??_lcd_init,f
  1642  0301  2B00               	goto	u1197
  1643  0302  0BA3               	decfsz	??_lcd_init+1,f
  1644  0303  2B00               	goto	u1197
  1645                           
  1646                           ;lcd.c: 15:     lcd_cmd(0x30);
  1647  0304  3030               	movlw	48
  1648  0305  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1649                           
  1650                           ;lcd.c: 17:     lcd_cmd(0x38);
  1651  030A  3038               	movlw	56
  1652  030B  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1653                           
  1654                           ;lcd.c: 18:     lcd_cmd(0x10);
  1655  0310  3010               	movlw	16
  1656  0311  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1657                           
  1658                           ;lcd.c: 19:     lcd_cmd(0x01);
  1659  0316  3001               	movlw	1
  1660  0317  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1661                           
  1662                           ;lcd.c: 20:     lcd_cmd(0x06);
  1663  031C  3006               	movlw	6
  1664  031D  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1665                           
  1666                           ;lcd.c: 21:     lcd_cmd(0x0F);
  1667  0322  300F               	movlw	15
  1668  0323  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  1669  0328                     l137:
  1670  0328  0008               	return
  1671  0329                     __end_of_lcd_init:
  1672                           
  1673                           	psect	text6
  1674  054B                     __ptext6:	
  1675 ;; *************** function _eusart_init_tx *****************
  1676 ;; Defined at:
  1677 ;;		line 3 in file "eusart.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_setup
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _eusart_init_tx
  1707  054B                     _eusart_init_tx:
  1708  054B                     l1551:	
  1709                           ;incstack = 0
  1710                           ; Regs used in _eusart_init_tx: [wreg+status,2]
  1711                           
  1712                           
  1713                           ;eusart.c: 5:     SPBRGH = 0;
  1714  054B  1683               	bsf	3,5	;RP0=1, select bank1
  1715  054C  1303               	bcf	3,6	;RP1=0, select bank1
  1716  054D  019A               	clrf	26	;volatile
  1717  054E                     l1553:
  1718                           
  1719                           ;eusart.c: 6:     SPBRG = 25;
  1720  054E  3019               	movlw	25
  1721  054F  0099               	movwf	25	;volatile
  1722  0550                     l1555:
  1723                           
  1724                           ;eusart.c: 7:     TXSTAbits.BRGH = 1;
  1725  0550  1518               	bsf	24,2	;volatile
  1726  0551                     l1557:
  1727                           
  1728                           ;eusart.c: 9:     TXSTAbits.SYNC = 0;
  1729  0551  1218               	bcf	24,4	;volatile
  1730  0552                     l1559:
  1731                           
  1732                           ;eusart.c: 10:     RCSTAbits.SPEN = 1;
  1733  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0554  1798               	bsf	24,7	;volatile
  1736  0555                     l1561:
  1737                           
  1738                           ;eusart.c: 12:     TXSTAbits.TX9 = 0;
  1739  0555  1683               	bsf	3,5	;RP0=1, select bank1
  1740  0556  1303               	bcf	3,6	;RP1=0, select bank1
  1741  0557  1318               	bcf	24,6	;volatile
  1742  0558                     l1563:
  1743                           
  1744                           ;eusart.c: 13:     TXSTAbits.TXEN = 1;
  1745  0558  1698               	bsf	24,5	;volatile
  1746  0559                     l182:
  1747  0559  0008               	return
  1748  055A                     __end_of_eusart_init_tx:
  1749                           
  1750                           	psect	text7
  1751  053A                     __ptext7:	
  1752 ;; *************** function _eusart_init_rx *****************
  1753 ;; Defined at:
  1754 ;;		line 28 in file "eusart.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_setup
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _eusart_init_rx
  1784  053A                     _eusart_init_rx:
  1785  053A                     l1567:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _eusart_init_rx: [wreg+status,2]
  1788                           
  1789                           
  1790                           ;eusart.c: 30:     SPBRGH = 0;
  1791  053A  1683               	bsf	3,5	;RP0=1, select bank1
  1792  053B  1303               	bcf	3,6	;RP1=0, select bank1
  1793  053C  019A               	clrf	26	;volatile
  1794  053D                     l1569:
  1795                           
  1796                           ;eusart.c: 31:     SPBRG = 25;
  1797  053D  3019               	movlw	25
  1798  053E  0099               	movwf	25	;volatile
  1799  053F                     l1571:
  1800                           
  1801                           ;eusart.c: 32:     TXSTAbits.BRGH = 1;
  1802  053F  1518               	bsf	24,2	;volatile
  1803  0540                     l1573:
  1804                           
  1805                           ;eusart.c: 34:     TXSTAbits.SYNC = 0;
  1806  0540  1218               	bcf	24,4	;volatile
  1807  0541                     l1575:
  1808                           
  1809                           ;eusart.c: 35:     RCSTAbits.SPEN = 1;
  1810  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0543  1798               	bsf	24,7	;volatile
  1813  0544                     l1577:
  1814                           
  1815                           ;eusart.c: 37:     TXSTAbits.TX9 = 0;
  1816  0544  1683               	bsf	3,5	;RP0=1, select bank1
  1817  0545  1303               	bcf	3,6	;RP1=0, select bank1
  1818  0546  1318               	bcf	24,6	;volatile
  1819  0547                     l1579:
  1820                           
  1821                           ;eusart.c: 38:     RCSTAbits.CREN = 1;
  1822  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0549  1618               	bsf	24,4	;volatile
  1825  054A                     l191:
  1826  054A  0008               	return
  1827  054B                     __end_of_eusart_init_rx:
  1828                           
  1829                           	psect	text8
  1830  0572                     __ptext8:	
  1831 ;; *************** function _eusart_enable_tx_isr *****************
  1832 ;; Defined at:
  1833 ;;		line 16 in file "eusart.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		None
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0
  1850 ;;      Totals:         0       0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_setup
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _eusart_enable_tx_isr
  1863  0572                     _eusart_enable_tx_isr:
  1864  0572                     l1565:	
  1865                           ;incstack = 0
  1866                           ; Regs used in _eusart_enable_tx_isr: []
  1867                           
  1868                           
  1869                           ;eusart.c: 18:     INTCONbits.GIE = 1;
  1870  0572  178B               	bsf	11,7	;volatile
  1871                           
  1872                           ;eusart.c: 19:     INTCONbits.PEIE = 1;
  1873  0573  170B               	bsf	11,6	;volatile
  1874                           
  1875                           ;eusart.c: 20:     PIE1bits.TXIE = 1;
  1876  0574  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0575  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0576  160C               	bsf	12,4	;volatile
  1879  0577                     l185:
  1880  0577  0008               	return
  1881  0578                     __end_of_eusart_enable_tx_isr:
  1882                           
  1883                           	psect	text9
  1884  0578                     __ptext9:	
  1885 ;; *************** function _eusart_enable_rx_isr *****************
  1886 ;; Defined at:
  1887 ;;		line 41 in file "eusart.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		None
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_setup
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _eusart_enable_rx_isr
  1917  0578                     _eusart_enable_rx_isr:
  1918  0578                     l1581:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _eusart_enable_rx_isr: []
  1921                           
  1922                           
  1923                           ;eusart.c: 43:     INTCONbits.GIE = 1;
  1924  0578  178B               	bsf	11,7	;volatile
  1925                           
  1926                           ;eusart.c: 44:     INTCONbits.PEIE = 1;
  1927  0579  170B               	bsf	11,6	;volatile
  1928                           
  1929                           ;eusart.c: 45:     PIE1bits.RCIE = 1;
  1930  057A  1683               	bsf	3,5	;RP0=1, select bank1
  1931  057B  1303               	bcf	3,6	;RP1=0, select bank1
  1932  057C  168C               	bsf	12,5	;volatile
  1933  057D                     l194:
  1934  057D  0008               	return
  1935  057E                     __end_of_eusart_enable_rx_isr:
  1936                           
  1937                           	psect	text10
  1938  0232                     __ptext10:	
  1939 ;; *************** function _display *****************
  1940 ;; Defined at:
  1941 ;;		line 149 in file "proyecto.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  str             3   26[BANK0 ] PTR unsigned char [3]
  1946 ;;		 -> ?_sprintf(2), 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       3       0       0       0
  1958 ;;      Temps:          0       1       0       0       0
  1959 ;;      Totals:         0       4       0       0       0
  1960 ;;Total ram usage:        4 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    4
  1963 ;; This function calls:
  1964 ;;		_lcd_move_cursor
  1965 ;;		_lcd_write_char
  1966 ;;		_lcd_write_string
  1967 ;;		_sprintf
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _display
  1975  0232                     _display:
  1976  0232                     l2047:	
  1977                           ;incstack = 0
  1978                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1979                           
  1980                           
  1981                           ;proyecto.c: 151:     lcd_move_cursor(0,0);
  1982  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0234  01A2               	clrf	lcd_move_cursor@col
  1985  0235  3000               	movlw	0
  1986  0236  120A  118A  24BC  120A  118A  	fcall	_lcd_move_cursor
  1987  023B                     l2049:
  1988                           
  1989                           ;proyecto.c: 152:     lcd_write_string("  S1:  S2:  S3: ");
  1990  023B  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1991  023C  120A  118A  2475  120A  118A  	fcall	_lcd_write_string
  1992  0241                     l2051:
  1993                           
  1994                           ;proyecto.c: 153:     lcd_move_cursor(1,0);
  1995  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0243  01A2               	clrf	lcd_move_cursor@col
  1998  0244  3001               	movlw	1
  1999  0245  120A  118A  24BC  120A  118A  	fcall	_lcd_move_cursor
  2000  024A                     l2053:
  2001                           
  2002                           ;proyecto.c: 155:     char* str[3];;proyecto.c: 157:     sprintf(str, "%.3i", uart_cont)
      +                          ;
  2003  024A  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2004  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2005  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2006  024D  00B9               	movwf	??_display
  2007  024E  0839               	movf	??_display,w
  2008  024F  00AC               	movwf	sprintf@f
  2009  0250  3000               	movlw	0
  2010  0251  00AD               	movwf	?_sprintf+1
  2011  0252  00AE               	movwf	?_sprintf+2
  2012  0253  303A               	movlw	(low (display@str| 0))& (0+255)
  2013  0254  120A  118A  2022  120A  118A  	fcall	_sprintf
  2014  0259                     l2055:
  2015                           
  2016                           ;proyecto.c: 159:     lcd_write_char(str_pot_a[1]);
  2017  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2018  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2019  025B  084B               	movf	_str_pot_a+1,w
  2020  025C  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2021  0261                     l2057:
  2022                           
  2023                           ;proyecto.c: 160:     lcd_write_char('.');
  2024  0261  302E               	movlw	46
  2025  0262  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2026  0267                     l2059:
  2027                           
  2028                           ;proyecto.c: 161:     lcd_write_char(str_pot_a[2]);
  2029  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0269  084C               	movf	_str_pot_a+2,w
  2032  026A  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2033  026F                     l2061:
  2034                           
  2035                           ;proyecto.c: 162:     lcd_write_char(str_pot_a[3]);
  2036  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0271  084D               	movf	_str_pot_a+3,w
  2039  0272  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2040  0277                     l2063:
  2041                           
  2042                           ;proyecto.c: 163:     lcd_write_char(str_pot_a[4]);
  2043  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0279  084E               	movf	_str_pot_a+4,w
  2046  027A  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2047  027F                     l2065:
  2048                           
  2049                           ;proyecto.c: 164:     lcd_write_char(' ');
  2050  027F  3020               	movlw	32
  2051  0280  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2052  0285                     l2067:
  2053                           
  2054                           ;proyecto.c: 166:     lcd_write_char(str_pot_b[1]);
  2055  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0287  0851               	movf	_str_pot_b+1,w
  2058  0288  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2059  028D                     l2069:
  2060                           
  2061                           ;proyecto.c: 167:     lcd_write_char('.');
  2062  028D  302E               	movlw	46
  2063  028E  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2064  0293                     l2071:
  2065                           
  2066                           ;proyecto.c: 168:     lcd_write_char(str_pot_b[2]);
  2067  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0295  0852               	movf	_str_pot_b+2,w
  2070  0296  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2071  029B                     l2073:
  2072                           
  2073                           ;proyecto.c: 169:     lcd_write_char(str_pot_b[3]);
  2074  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2075  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2076  029D  0853               	movf	_str_pot_b+3,w
  2077  029E  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2078  02A3                     l2075:
  2079                           
  2080                           ;proyecto.c: 170:     lcd_write_char(str_pot_b[4]);
  2081  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2082  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2083  02A5  0854               	movf	_str_pot_b+4,w
  2084  02A6  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2085  02AB                     l2077:
  2086                           
  2087                           ;proyecto.c: 171:     lcd_write_char(' ');
  2088  02AB  3020               	movlw	32
  2089  02AC  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2090  02B1                     l2079:
  2091                           
  2092                           ;proyecto.c: 173:     lcd_write_char(str[0]);
  2093  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2094  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2095  02B3  083A               	movf	display@str,w
  2096  02B4  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2097  02B9                     l2081:
  2098                           
  2099                           ;proyecto.c: 174:     lcd_write_char(str[1]);
  2100  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2101  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2102  02BB  083B               	movf	display@str+1,w
  2103  02BC  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2104  02C1                     l2083:
  2105                           
  2106                           ;proyecto.c: 175:     lcd_write_char(str[2]);
  2107  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2108  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2109  02C3  083C               	movf	display@str+2,w
  2110  02C4  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2111  02C9                     l2085:
  2112                           
  2113                           ;proyecto.c: 176:     lcd_write_char(str[3]);
  2114  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2115  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2116  02CB  083D               	movf	display@str+3,w
  2117  02CC  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  2118  02D1                     l121:
  2119  02D1  0008               	return
  2120  02D2                     __end_of_display:
  2121                           
  2122                           	psect	text11
  2123  0022                     __ptext11:	
  2124 ;; *************** function _sprintf *****************
  2125 ;; Defined at:
  2126 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  sp              1    wreg     PTR unsigned char 
  2129 ;;		 -> display@str(3), str_pot_b(5), str_pot_a(6), 
  2130 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2131 ;;		 -> STR_4(5), STR_2(7), STR_1(7), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  2134 ;;		 -> display@str(3), str_pot_b(5), str_pot_a(6), 
  2135 ;;  tmpval          4    0        struct .
  2136 ;;  val             2   20[BANK0 ] unsigned int 
  2137 ;;  cp              2    0        PTR const unsigned char 
  2138 ;;  len             2    0        unsigned int 
  2139 ;;  c               1   24[BANK0 ] unsigned char 
  2140 ;;  prec            1   23[BANK0 ] char 
  2141 ;;  flag            1   19[BANK0 ] unsigned char 
  2142 ;;  ap              1   18[BANK0 ] PTR void [1]
  2143 ;;		 -> ?_sprintf(2), 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2   12[BANK0 ] int 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       3       0       0       0
  2154 ;;      Locals:         0       7       0       0       0
  2155 ;;      Temps:          0       3       0       0       0
  2156 ;;      Totals:         0      13       0       0       0
  2157 ;;Total ram usage:       13 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    2
  2160 ;; This function calls:
  2161 ;;		___bmul
  2162 ;;		___lwdiv
  2163 ;;		___lwmod
  2164 ;;		_isdigit
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;;		_display
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _sprintf
  2173  0022                     _sprintf:
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2177                           ;sprintf@sp stored from wreg
  2178  0022  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0023  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0024  00B6               	movwf	sprintf@sp
  2181  0025                     l1861:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2184  0025  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2185  0026  00AF               	movwf	??_sprintf
  2186  0027  082F               	movf	??_sprintf,w
  2187  0028  00B2               	movwf	sprintf@ap
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2190  0029  2970               	goto	l1939
  2191  002A                     l1863:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2194  002A  3025               	movlw	37
  2195  002B  0638               	xorwf	sprintf@c,w
  2196  002C  1903               	btfsc	3,2
  2197  002D  282F               	goto	u941
  2198  002E  2830               	goto	u940
  2199  002F                     u941:
  2200  002F  283C               	goto	l1869
  2201  0030                     u940:
  2202  0030                     l1865:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2205  0030  0838               	movf	sprintf@c,w
  2206  0031  00AF               	movwf	??_sprintf
  2207  0032  0836               	movf	sprintf@sp,w
  2208  0033  0084               	movwf	4
  2209  0034  082F               	movf	??_sprintf,w
  2210  0035  1383               	bcf	3,7	;select IRP bank0
  2211  0036  0080               	movwf	0
  2212  0037                     l1867:
  2213  0037  3001               	movlw	1
  2214  0038  00AF               	movwf	??_sprintf
  2215  0039  082F               	movf	??_sprintf,w
  2216  003A  07B6               	addwf	sprintf@sp,f
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2219  003B  2970               	goto	l1939
  2220  003C                     l1869:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2223  003C  01B3               	clrf	sprintf@flag
  2224  003D                     l1871:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2227  003D  082C               	movf	sprintf@f,w
  2228  003E  0084               	movwf	4
  2229  003F  120A  118A  2441  120A  118A  	fcall	stringdir
  2230  0044  3A2E               	xorlw	46
  2231  0045  1D03               	skipz
  2232  0046  2848               	goto	u951
  2233  0047  2849               	goto	u950
  2234  0048                     u951:
  2235  0048  2880               	goto	l1885
  2236  0049                     u950:
  2237  0049                     l1873:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2240  0049  3001               	movlw	1
  2241  004A  00AF               	movwf	??_sprintf
  2242  004B  082F               	movf	??_sprintf,w
  2243  004C  07AC               	addwf	sprintf@f,f
  2244  004D                     l1875:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2247  004D  01B7               	clrf	sprintf@prec
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2250  004E  286F               	goto	l1883
  2251  004F                     l1877:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2254  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0050  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0051  0837               	movf	sprintf@prec,w
  2257  0052  00AF               	movwf	??_sprintf
  2258  0053  082F               	movf	??_sprintf,w
  2259  0054  00F4               	movwf	___bmul@multiplicand
  2260  0055  300A               	movlw	10
  2261  0056  120A  118A  2511  120A  118A  	fcall	___bmul
  2262  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2263  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2264  005D  00B0               	movwf	??_sprintf+1
  2265  005E  0830               	movf	??_sprintf+1,w
  2266  005F  00B7               	movwf	sprintf@prec
  2267  0060                     l1879:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2270  0060  082C               	movf	sprintf@f,w
  2271  0061  0084               	movwf	4
  2272  0062  120A  118A  2441  120A  118A  	fcall	stringdir
  2273  0067  3ED0               	addlw	-48
  2274  0068  00AF               	movwf	??_sprintf
  2275  0069  082F               	movf	??_sprintf,w
  2276  006A  07B7               	addwf	sprintf@prec,f
  2277  006B                     l1881:
  2278  006B  3001               	movlw	1
  2279  006C  00AF               	movwf	??_sprintf
  2280  006D  082F               	movf	??_sprintf,w
  2281  006E  07AC               	addwf	sprintf@f,f
  2282  006F                     l1883:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2285  006F  082C               	movf	sprintf@f,w
  2286  0070  0084               	movwf	4
  2287  0071  120A  118A  2441  120A  118A  	fcall	stringdir
  2288  0076  120A  118A  2528  120A  118A  	fcall	_isdigit
  2289  007B  1803               	btfsc	3,0
  2290  007C  287E               	goto	u961
  2291  007D  287F               	goto	u960
  2292  007E                     u961:
  2293  007E  284F               	goto	l1877
  2294  007F                     u960:
  2295  007F  2881               	goto	l1889
  2296  0080                     l1885:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2299  0080  01B7               	clrf	sprintf@prec
  2300  0081                     l1889:
  2301  0081  3001               	movlw	1
  2302  0082  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0083  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0084  07AC               	addwf	sprintf@f,f
  2305  0085  30FF               	movlw	-1
  2306  0086  072C               	addwf	sprintf@f,w
  2307  0087  0084               	movwf	4
  2308  0088  120A  118A  2441  120A  118A  	fcall	stringdir
  2309  008D  00B8               	movwf	sprintf@c
  2310  008E  00AF               	movwf	??_sprintf
  2311  008F  01B0               	clrf	??_sprintf+1
  2312                           
  2313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2314                           ; Switch size 1, requested type "simple"
  2315                           ; Number of cases is 1, Range of values is 0 to 0
  2316                           ; switch strategies available:
  2317                           ; Name         Instructions Cycles
  2318                           ; simple_byte            4     3 (average)
  2319                           ; direct_byte           11     8 (fixed)
  2320                           ; jumptable            260     6 (fixed)
  2321                           ;	Chosen strategy is simple_byte
  2322  0090  0830               	movf	??_sprintf+1,w
  2323  0091  3A00               	xorlw	0	; case 0
  2324  0092  1903               	skipnz
  2325  0093  2895               	goto	l2163
  2326  0094  2970               	goto	l1939
  2327  0095                     l2163:
  2328                           
  2329                           ; Switch size 1, requested type "simple"
  2330                           ; Number of cases is 3, Range of values is 0 to 105
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte           10     6 (average)
  2334                           ; jumptable            260     6 (fixed)
  2335                           ;	Chosen strategy is simple_byte
  2336  0095  082F               	movf	??_sprintf,w
  2337  0096  3A00               	xorlw	0	; case 0
  2338  0097  1903               	skipnz
  2339  0098  2982               	goto	l1941
  2340  0099  3A64               	xorlw	100	; case 100
  2341  009A  1903               	skipnz
  2342  009B  28A0               	goto	l1891
  2343  009C  3A0D               	xorlw	13	; case 105
  2344  009D  1903               	skipnz
  2345  009E  28A0               	goto	l1891
  2346  009F  2970               	goto	l1939
  2347  00A0                     l1891:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2350  00A0  0832               	movf	sprintf@ap,w
  2351  00A1  0084               	movwf	4
  2352  00A2  1383               	bcf	3,7	;select IRP bank0
  2353  00A3  0800               	movf	0,w
  2354  00A4  00B4               	movwf	sprintf@val
  2355  00A5  0A84               	incf	4,f
  2356  00A6  0800               	movf	0,w
  2357  00A7  00B5               	movwf	sprintf@val+1
  2358  00A8                     l1893:
  2359  00A8  3002               	movlw	2
  2360  00A9  00AF               	movwf	??_sprintf
  2361  00AA  082F               	movf	??_sprintf,w
  2362  00AB  07B2               	addwf	sprintf@ap,f
  2363  00AC                     l1895:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2366  00AC  1FB5               	btfss	sprintf@val+1,7
  2367  00AD  28AF               	goto	u971
  2368  00AE  28B0               	goto	u970
  2369  00AF                     u971:
  2370  00AF  28B9               	goto	l1901
  2371  00B0                     u970:
  2372  00B0                     l1897:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2375  00B0  3003               	movlw	3
  2376  00B1  00AF               	movwf	??_sprintf
  2377  00B2  082F               	movf	??_sprintf,w
  2378  00B3  04B3               	iorwf	sprintf@flag,f
  2379  00B4                     l1899:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2382  00B4  09B4               	comf	sprintf@val,f
  2383  00B5  09B5               	comf	sprintf@val+1,f
  2384  00B6  0AB4               	incf	sprintf@val,f
  2385  00B7  1903               	skipnz
  2386  00B8  0AB5               	incf	sprintf@val+1,f
  2387  00B9                     l1901:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2390  00B9  0837               	movf	sprintf@prec,w
  2391  00BA  1D03               	btfss	3,2
  2392  00BB  28BD               	goto	u981
  2393  00BC  28BE               	goto	u980
  2394  00BD                     u981:
  2395  00BD  28C8               	goto	l1907
  2396  00BE                     u980:
  2397  00BE                     l1903:
  2398  00BE  0834               	movf	sprintf@val,w
  2399  00BF  0435               	iorwf	sprintf@val+1,w
  2400  00C0  1D03               	btfss	3,2
  2401  00C1  28C3               	goto	u991
  2402  00C2  28C4               	goto	u990
  2403  00C3                     u991:
  2404  00C3  28C8               	goto	l1907
  2405  00C4                     u990:
  2406  00C4                     l1905:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2409  00C4  3001               	movlw	1
  2410  00C5  00AF               	movwf	??_sprintf
  2411  00C6  082F               	movf	??_sprintf,w
  2412  00C7  07B7               	addwf	sprintf@prec,f
  2413  00C8                     l1907:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2416  00C8  01B8               	clrf	sprintf@c
  2417  00C9  0AB8               	incf	sprintf@c,f
  2418  00CA                     l1911:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2421  00CA  0838               	movf	sprintf@c,w
  2422  00CB  00AF               	movwf	??_sprintf
  2423  00CC  072F               	addwf	??_sprintf,w
  2424  00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2425  00CE  0084               	movwf	4
  2426  00CF  120A  118A  2441  120A  118A  	fcall	stringdir
  2427  00D4  00B0               	movwf	??_sprintf+1
  2428  00D5  120A  118A  2441  120A  118A  	fcall	stringdir
  2429  00DA  00B1               	movwf	??_sprintf+2
  2430  00DB  0831               	movf	??_sprintf+2,w
  2431  00DC  0235               	subwf	sprintf@val+1,w
  2432  00DD  1D03               	skipz
  2433  00DE  28E1               	goto	u1005
  2434  00DF  0830               	movf	??_sprintf+1,w
  2435  00E0  0234               	subwf	sprintf@val,w
  2436  00E1                     u1005:
  2437  00E1  1803               	skipnc
  2438  00E2  28E4               	goto	u1001
  2439  00E3  28E5               	goto	u1000
  2440  00E4                     u1001:
  2441  00E4  28E6               	goto	l1915
  2442  00E5                     u1000:
  2443  00E5  28F0               	goto	l1917
  2444  00E6                     l1915:
  2445  00E6  3001               	movlw	1
  2446  00E7  00AF               	movwf	??_sprintf
  2447  00E8  082F               	movf	??_sprintf,w
  2448  00E9  07B8               	addwf	sprintf@c,f
  2449  00EA  3005               	movlw	5
  2450  00EB  0638               	xorwf	sprintf@c,w
  2451  00EC  1D03               	btfss	3,2
  2452  00ED  28EF               	goto	u1011
  2453  00EE  28F0               	goto	u1010
  2454  00EF                     u1011:
  2455  00EF  28CA               	goto	l1911
  2456  00F0                     u1010:
  2457  00F0                     l1917:
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2460  00F0  0837               	movf	sprintf@prec,w
  2461  00F1  00AF               	movwf	??_sprintf
  2462  00F2  01B0               	clrf	??_sprintf+1
  2463  00F3  1BAF               	btfsc	??_sprintf,7
  2464  00F4  03B0               	decf	??_sprintf+1,f
  2465  00F5  0830               	movf	??_sprintf+1,w
  2466  00F6  3A80               	xorlw	128
  2467  00F7  3C80               	sublw	128
  2468  00F8  1D03               	skipz
  2469  00F9  28FC               	goto	u1025
  2470  00FA  082F               	movf	??_sprintf,w
  2471  00FB  0238               	subwf	sprintf@c,w
  2472  00FC                     u1025:
  2473  00FC  1803               	skipnc
  2474  00FD  28FF               	goto	u1021
  2475  00FE  2900               	goto	u1020
  2476  00FF                     u1021:
  2477  00FF  2901               	goto	l1921
  2478  0100                     u1020:
  2479  0100                     l1919:
  2480  0100  291B               	goto	l1925
  2481  0101                     l1921:
  2482  0101  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0102  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0103  0837               	movf	sprintf@prec,w
  2485  0104  00AF               	movwf	??_sprintf
  2486  0105  01B0               	clrf	??_sprintf+1
  2487  0106  1BAF               	btfsc	??_sprintf,7
  2488  0107  03B0               	decf	??_sprintf+1,f
  2489  0108  0830               	movf	??_sprintf+1,w
  2490  0109  3A80               	xorlw	128
  2491  010A  00B1               	movwf	??_sprintf+2
  2492  010B  3080               	movlw	128
  2493  010C  0231               	subwf	??_sprintf+2,w
  2494  010D  1D03               	skipz
  2495  010E  2911               	goto	u1035
  2496  010F  0838               	movf	sprintf@c,w
  2497  0110  022F               	subwf	??_sprintf,w
  2498  0111                     u1035:
  2499  0111  1803               	skipnc
  2500  0112  2914               	goto	u1031
  2501  0113  2915               	goto	u1030
  2502  0114                     u1031:
  2503  0114  291B               	goto	l1925
  2504  0115                     u1030:
  2505  0115                     l1923:
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2508  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0117  0838               	movf	sprintf@c,w
  2511  0118  00AF               	movwf	??_sprintf
  2512  0119  082F               	movf	??_sprintf,w
  2513  011A  00B7               	movwf	sprintf@prec
  2514  011B                     l1925:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2517  011B  1283               	bcf	3,5	;RP0=0, select bank0
  2518  011C  1303               	bcf	3,6	;RP1=0, select bank0
  2519  011D  0833               	movf	sprintf@flag,w
  2520  011E  3903               	andlw	3
  2521  011F  1903               	btfsc	3,2
  2522  0120  2922               	goto	u1041
  2523  0121  2923               	goto	u1040
  2524  0122                     u1041:
  2525  0122  2967               	goto	l1937
  2526  0123                     u1040:
  2527  0123                     l1927:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2530  0123  302D               	movlw	45
  2531  0124  00AF               	movwf	??_sprintf
  2532  0125  0836               	movf	sprintf@sp,w
  2533  0126  0084               	movwf	4
  2534  0127  082F               	movf	??_sprintf,w
  2535  0128  1383               	bcf	3,7	;select IRP bank0
  2536  0129  0080               	movwf	0
  2537  012A                     l1929:
  2538  012A  3001               	movlw	1
  2539  012B  00AF               	movwf	??_sprintf
  2540  012C  082F               	movf	??_sprintf,w
  2541  012D  07B6               	addwf	sprintf@sp,f
  2542  012E  2967               	goto	l1937
  2543  012F                     l1931:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2546  012F  300A               	movlw	10
  2547  0130  00A7               	movwf	___lwmod@divisor
  2548  0131  3000               	movlw	0
  2549  0132  00A8               	movwf	___lwmod@divisor+1
  2550  0133  0837               	movf	sprintf@prec,w
  2551  0134  00AF               	movwf	??_sprintf
  2552  0135  072F               	addwf	??_sprintf,w
  2553  0136  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2554  0137  0084               	movwf	4
  2555  0138  120A  118A  2441  120A  118A  	fcall	stringdir
  2556  013D  00A0               	movwf	___lwdiv@divisor
  2557  013E  120A  118A  2441  120A  118A  	fcall	stringdir
  2558  0143  00A1               	movwf	___lwdiv@divisor+1
  2559  0144  0835               	movf	sprintf@val+1,w
  2560  0145  00A3               	movwf	___lwdiv@dividend+1
  2561  0146  0834               	movf	sprintf@val,w
  2562  0147  00A2               	movwf	___lwdiv@dividend
  2563  0148  120A  118A  237A  120A  118A  	fcall	___lwdiv
  2564  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2565  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2566  014F  0821               	movf	?___lwdiv+1,w
  2567  0150  00AA               	movwf	___lwmod@dividend+1
  2568  0151  0820               	movf	?___lwdiv,w
  2569  0152  00A9               	movwf	___lwmod@dividend
  2570  0153  120A  118A  2405  120A  118A  	fcall	___lwmod
  2571  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2573  015A  0827               	movf	?___lwmod,w
  2574  015B  3E30               	addlw	48
  2575  015C  00B0               	movwf	??_sprintf+1
  2576  015D  0830               	movf	??_sprintf+1,w
  2577  015E  00B8               	movwf	sprintf@c
  2578  015F                     l1933:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2581  015F  0838               	movf	sprintf@c,w
  2582  0160  00AF               	movwf	??_sprintf
  2583  0161  0836               	movf	sprintf@sp,w
  2584  0162  0084               	movwf	4
  2585  0163  082F               	movf	??_sprintf,w
  2586  0164  1383               	bcf	3,7	;select IRP bank0
  2587  0165  0080               	movwf	0
  2588  0166  292A               	goto	l1929
  2589  0167                     l1937:
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2592  0167  30FF               	movlw	255
  2593  0168  00AF               	movwf	??_sprintf
  2594  0169  082F               	movf	??_sprintf,w
  2595  016A  07B7               	addwf	sprintf@prec,f
  2596  016B  0A37               	incf	sprintf@prec,w
  2597  016C  1D03               	btfss	3,2
  2598  016D  296F               	goto	u1051
  2599  016E  2970               	goto	u1050
  2600  016F                     u1051:
  2601  016F  292F               	goto	l1931
  2602  0170                     u1050:
  2603  0170                     l1939:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2606  0170  3001               	movlw	1
  2607  0171  07AC               	addwf	sprintf@f,f
  2608  0172  30FF               	movlw	-1
  2609  0173  072C               	addwf	sprintf@f,w
  2610  0174  0084               	movwf	4
  2611  0175  120A  118A  2441  120A  118A  	fcall	stringdir
  2612  017A  00AF               	movwf	??_sprintf
  2613  017B  082F               	movf	??_sprintf,w
  2614  017C  00B8               	movwf	sprintf@c
  2615  017D  0838               	movf	sprintf@c,w
  2616  017E  1D03               	btfss	3,2
  2617  017F  2981               	goto	u1061
  2618  0180  2982               	goto	u1060
  2619  0181                     u1061:
  2620  0181  282A               	goto	l1863
  2621  0182                     u1060:
  2622  0182                     l1941:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2625  0182  0836               	movf	sprintf@sp,w
  2626  0183  0084               	movwf	4
  2627  0184  1383               	bcf	3,7	;select IRP bank0
  2628  0185  0180               	clrf	0
  2629  0186                     l352:
  2630  0186  0008               	return
  2631  0187                     __end_of_sprintf:
  2632                           
  2633                           	psect	text12
  2634  0528                     __ptext12:	
  2635 ;; *************** function _isdigit *****************
  2636 ;; Defined at:
  2637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  c               1    wreg     unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  c               1    5[COMMON] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;		None               void
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         0       0       0       0       0
  2652 ;;      Locals:         2       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0
  2654 ;;      Totals:         2       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_sprintf
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _isdigit
  2667  0528                     _isdigit:
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2671                           ;isdigit@c stored from wreg
  2672  0528  00F5               	movwf	isdigit@c
  2673  0529                     l1361:
  2674  0529  01F4               	clrf	_isdigit$1071
  2675  052A                     l1363:
  2676  052A  303A               	movlw	58
  2677  052B  0275               	subwf	isdigit@c,w
  2678  052C  1803               	skipnc
  2679  052D  2D2F               	goto	u431
  2680  052E  2D30               	goto	u430
  2681  052F                     u431:
  2682  052F  2D38               	goto	l1369
  2683  0530                     u430:
  2684  0530                     l1365:
  2685  0530  3030               	movlw	48
  2686  0531  0275               	subwf	isdigit@c,w
  2687  0532  1C03               	skipc
  2688  0533  2D35               	goto	u441
  2689  0534  2D36               	goto	u440
  2690  0535                     u441:
  2691  0535  2D38               	goto	l1369
  2692  0536                     u440:
  2693  0536                     l1367:
  2694  0536  01F4               	clrf	_isdigit$1071
  2695  0537  0AF4               	incf	_isdigit$1071,f
  2696  0538                     l1369:
  2697  0538  0C74               	rrf	_isdigit$1071,w
  2698  0539                     l809:
  2699  0539  0008               	return
  2700  053A                     __end_of_isdigit:
  2701                           
  2702                           	psect	text13
  2703  0405                     __ptext13:	
  2704 ;; *************** function ___lwmod *****************
  2705 ;; Defined at:
  2706 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  divisor         2    7[BANK0 ] unsigned int 
  2709 ;;  dividend        2    9[BANK0 ] unsigned int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  counter         1   11[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2    7[BANK0 ] unsigned int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       4       0       0       0
  2722 ;;      Locals:         0       1       0       0       0
  2723 ;;      Temps:          1       0       0       0       0
  2724 ;;      Totals:         1       5       0       0       0
  2725 ;;Total ram usage:        6 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_sprintf
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function ___lwmod
  2737  0405                     ___lwmod:
  2738  0405                     l1413:	
  2739                           ;incstack = 0
  2740                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2741                           
  2742  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0407  0827               	movf	___lwmod@divisor,w
  2745  0408  0428               	iorwf	___lwmod@divisor+1,w
  2746  0409  1903               	btfsc	3,2
  2747  040A  2C0C               	goto	u541
  2748  040B  2C0D               	goto	u540
  2749  040C                     u541:
  2750  040C  2C3C               	goto	l1431
  2751  040D                     u540:
  2752  040D                     l1415:
  2753  040D  01AB               	clrf	___lwmod@counter
  2754  040E  0AAB               	incf	___lwmod@counter,f
  2755  040F  2C1B               	goto	l1421
  2756  0410                     l1417:
  2757  0410  3001               	movlw	1
  2758  0411                     u555:
  2759  0411  1003               	clrc
  2760  0412  0DA7               	rlf	___lwmod@divisor,f
  2761  0413  0DA8               	rlf	___lwmod@divisor+1,f
  2762  0414  3EFF               	addlw	-1
  2763  0415  1D03               	skipz
  2764  0416  2C11               	goto	u555
  2765  0417                     l1419:
  2766  0417  3001               	movlw	1
  2767  0418  00F5               	movwf	??___lwmod
  2768  0419  0875               	movf	??___lwmod,w
  2769  041A  07AB               	addwf	___lwmod@counter,f
  2770  041B                     l1421:
  2771  041B  1FA8               	btfss	___lwmod@divisor+1,7
  2772  041C  2C1E               	goto	u561
  2773  041D  2C1F               	goto	u560
  2774  041E                     u561:
  2775  041E  2C10               	goto	l1417
  2776  041F                     u560:
  2777  041F                     l1423:
  2778  041F  0828               	movf	___lwmod@divisor+1,w
  2779  0420  022A               	subwf	___lwmod@dividend+1,w
  2780  0421  1D03               	skipz
  2781  0422  2C25               	goto	u575
  2782  0423  0827               	movf	___lwmod@divisor,w
  2783  0424  0229               	subwf	___lwmod@dividend,w
  2784  0425                     u575:
  2785  0425  1C03               	skipc
  2786  0426  2C28               	goto	u571
  2787  0427  2C29               	goto	u570
  2788  0428                     u571:
  2789  0428  2C2F               	goto	l1427
  2790  0429                     u570:
  2791  0429                     l1425:
  2792  0429  0827               	movf	___lwmod@divisor,w
  2793  042A  02A9               	subwf	___lwmod@dividend,f
  2794  042B  0828               	movf	___lwmod@divisor+1,w
  2795  042C  1C03               	skipc
  2796  042D  03AA               	decf	___lwmod@dividend+1,f
  2797  042E  02AA               	subwf	___lwmod@dividend+1,f
  2798  042F                     l1427:
  2799  042F  3001               	movlw	1
  2800  0430                     u585:
  2801  0430  1003               	clrc
  2802  0431  0CA8               	rrf	___lwmod@divisor+1,f
  2803  0432  0CA7               	rrf	___lwmod@divisor,f
  2804  0433  3EFF               	addlw	-1
  2805  0434  1D03               	skipz
  2806  0435  2C30               	goto	u585
  2807  0436                     l1429:
  2808  0436  3001               	movlw	1
  2809  0437  02AB               	subwf	___lwmod@counter,f
  2810  0438  1D03               	btfss	3,2
  2811  0439  2C3B               	goto	u591
  2812  043A  2C3C               	goto	u590
  2813  043B                     u591:
  2814  043B  2C1F               	goto	l1423
  2815  043C                     u590:
  2816  043C                     l1431:
  2817  043C  082A               	movf	___lwmod@dividend+1,w
  2818  043D  00A8               	movwf	?___lwmod+1
  2819  043E  0829               	movf	___lwmod@dividend,w
  2820  043F  00A7               	movwf	?___lwmod
  2821  0440                     l638:
  2822  0440  0008               	return
  2823  0441                     __end_of___lwmod:
  2824                           
  2825                           	psect	text14
  2826  037A                     __ptext14:	
  2827 ;; *************** function ___lwdiv *****************
  2828 ;; Defined at:
  2829 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  divisor         2    0[BANK0 ] unsigned int 
  2832 ;;  dividend        2    2[BANK0 ] unsigned int 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  quotient        2    5[BANK0 ] unsigned int 
  2835 ;;  counter         1    4[BANK0 ] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2    0[BANK0 ] unsigned int 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         0       4       0       0       0
  2846 ;;      Locals:         0       3       0       0       0
  2847 ;;      Temps:          1       0       0       0       0
  2848 ;;      Totals:         1       7       0       0       0
  2849 ;;Total ram usage:        8 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_sprintf
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function ___lwdiv
  2861  037A                     ___lwdiv:
  2862  037A                     l1835:	
  2863                           ;incstack = 0
  2864                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2865                           
  2866  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2867  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2868  037C  01A5               	clrf	___lwdiv@quotient
  2869  037D  01A6               	clrf	___lwdiv@quotient+1
  2870  037E                     l1837:
  2871  037E  0820               	movf	___lwdiv@divisor,w
  2872  037F  0421               	iorwf	___lwdiv@divisor+1,w
  2873  0380  1903               	btfsc	3,2
  2874  0381  2B83               	goto	u871
  2875  0382  2B84               	goto	u870
  2876  0383                     u871:
  2877  0383  2BBB               	goto	l1857
  2878  0384                     u870:
  2879  0384                     l1839:
  2880  0384  01A4               	clrf	___lwdiv@counter
  2881  0385  0AA4               	incf	___lwdiv@counter,f
  2882  0386  2B92               	goto	l1845
  2883  0387                     l1841:
  2884  0387  3001               	movlw	1
  2885  0388                     u885:
  2886  0388  1003               	clrc
  2887  0389  0DA0               	rlf	___lwdiv@divisor,f
  2888  038A  0DA1               	rlf	___lwdiv@divisor+1,f
  2889  038B  3EFF               	addlw	-1
  2890  038C  1D03               	skipz
  2891  038D  2B88               	goto	u885
  2892  038E                     l1843:
  2893  038E  3001               	movlw	1
  2894  038F  00F4               	movwf	??___lwdiv
  2895  0390  0874               	movf	??___lwdiv,w
  2896  0391  07A4               	addwf	___lwdiv@counter,f
  2897  0392                     l1845:
  2898  0392  1FA1               	btfss	___lwdiv@divisor+1,7
  2899  0393  2B95               	goto	u891
  2900  0394  2B96               	goto	u890
  2901  0395                     u891:
  2902  0395  2B87               	goto	l1841
  2903  0396                     u890:
  2904  0396                     l1847:
  2905  0396  3001               	movlw	1
  2906  0397                     u905:
  2907  0397  1003               	clrc
  2908  0398  0DA5               	rlf	___lwdiv@quotient,f
  2909  0399  0DA6               	rlf	___lwdiv@quotient+1,f
  2910  039A  3EFF               	addlw	-1
  2911  039B  1D03               	skipz
  2912  039C  2B97               	goto	u905
  2913  039D  0821               	movf	___lwdiv@divisor+1,w
  2914  039E  0223               	subwf	___lwdiv@dividend+1,w
  2915  039F  1D03               	skipz
  2916  03A0  2BA3               	goto	u915
  2917  03A1  0820               	movf	___lwdiv@divisor,w
  2918  03A2  0222               	subwf	___lwdiv@dividend,w
  2919  03A3                     u915:
  2920  03A3  1C03               	skipc
  2921  03A4  2BA6               	goto	u911
  2922  03A5  2BA7               	goto	u910
  2923  03A6                     u911:
  2924  03A6  2BAE               	goto	l1853
  2925  03A7                     u910:
  2926  03A7                     l1849:
  2927  03A7  0820               	movf	___lwdiv@divisor,w
  2928  03A8  02A2               	subwf	___lwdiv@dividend,f
  2929  03A9  0821               	movf	___lwdiv@divisor+1,w
  2930  03AA  1C03               	skipc
  2931  03AB  03A3               	decf	___lwdiv@dividend+1,f
  2932  03AC  02A3               	subwf	___lwdiv@dividend+1,f
  2933  03AD                     l1851:
  2934  03AD  1425               	bsf	___lwdiv@quotient,0
  2935  03AE                     l1853:
  2936  03AE  3001               	movlw	1
  2937  03AF                     u925:
  2938  03AF  1003               	clrc
  2939  03B0  0CA1               	rrf	___lwdiv@divisor+1,f
  2940  03B1  0CA0               	rrf	___lwdiv@divisor,f
  2941  03B2  3EFF               	addlw	-1
  2942  03B3  1D03               	skipz
  2943  03B4  2BAF               	goto	u925
  2944  03B5                     l1855:
  2945  03B5  3001               	movlw	1
  2946  03B6  02A4               	subwf	___lwdiv@counter,f
  2947  03B7  1D03               	btfss	3,2
  2948  03B8  2BBA               	goto	u931
  2949  03B9  2BBB               	goto	u930
  2950  03BA                     u931:
  2951  03BA  2B96               	goto	l1847
  2952  03BB                     u930:
  2953  03BB                     l1857:
  2954  03BB  0826               	movf	___lwdiv@quotient+1,w
  2955  03BC  00A1               	movwf	?___lwdiv+1
  2956  03BD  0825               	movf	___lwdiv@quotient,w
  2957  03BE  00A0               	movwf	?___lwdiv
  2958  03BF                     l628:
  2959  03BF  0008               	return
  2960  03C0                     __end_of___lwdiv:
  2961                           
  2962                           	psect	text15
  2963  0511                     __ptext15:	
  2964 ;; *************** function ___bmul *****************
  2965 ;; Defined at:
  2966 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  multiplier      1    wreg     unsigned char 
  2969 ;;  multiplicand    1    4[COMMON] unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2972 ;;  product         1    0[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      unsigned char 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         1       0       0       0       0
  2983 ;;      Locals:         0       2       0       0       0
  2984 ;;      Temps:          1       0       0       0       0
  2985 ;;      Totals:         2       2       0       0       0
  2986 ;;Total ram usage:        4 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_sprintf
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function ___bmul
  2998  0511                     ___bmul:
  2999                           
  3000                           ;incstack = 0
  3001                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3002                           ;___bmul@multiplier stored from wreg
  3003  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0513  00A1               	movwf	___bmul@multiplier
  3006  0514                     l1821:
  3007  0514  01A0               	clrf	___bmul@product
  3008  0515                     l1823:
  3009  0515  1C21               	btfss	___bmul@multiplier,0
  3010  0516  2D18               	goto	u851
  3011  0517  2D19               	goto	u850
  3012  0518                     u851:
  3013  0518  2D1D               	goto	l1827
  3014  0519                     u850:
  3015  0519                     l1825:
  3016  0519  0874               	movf	___bmul@multiplicand,w
  3017  051A  00F5               	movwf	??___bmul
  3018  051B  0875               	movf	??___bmul,w
  3019  051C  07A0               	addwf	___bmul@product,f
  3020  051D                     l1827:
  3021  051D  1003               	clrc
  3022  051E  0DF4               	rlf	___bmul@multiplicand,f
  3023  051F                     l1829:
  3024  051F  1003               	clrc
  3025  0520  0CA1               	rrf	___bmul@multiplier,f
  3026  0521  0821               	movf	___bmul@multiplier,w
  3027  0522  1D03               	btfss	3,2
  3028  0523  2D25               	goto	u861
  3029  0524  2D26               	goto	u860
  3030  0525                     u861:
  3031  0525  2D15               	goto	l1823
  3032  0526                     u860:
  3033  0526                     l1831:
  3034  0526  0820               	movf	___bmul@product,w
  3035  0527                     l382:
  3036  0527  0008               	return
  3037  0528                     __end_of___bmul:
  3038                           
  3039                           	psect	text16
  3040  0475                     __ptext16:	
  3041 ;; *************** function _lcd_write_string *****************
  3042 ;; Defined at:
  3043 ;;		line 111 in file "lcd.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  a               1    wreg     PTR unsigned char 
  3046 ;;		 -> STR_3(17), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3049 ;;		 -> STR_3(17), 
  3050 ;;  i               2    3[BANK0 ] int 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       0       0       0       0
  3061 ;;      Locals:         0       3       0       0       0
  3062 ;;      Temps:          0       0       0       0       0
  3063 ;;      Totals:         0       3       0       0       0
  3064 ;;Total ram usage:        3 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		_lcd_write_char
  3069 ;; This function is called by:
  3070 ;;		_display
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _lcd_write_string
  3076  0475                     _lcd_write_string:
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3080                           ;lcd_write_string@a stored from wreg
  3081  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0477  00A2               	movwf	lcd_write_string@a
  3084  0478                     l1959:
  3085                           
  3086                           ;lcd.c: 111: void lcd_write_string(uint8_t *a);lcd.c: 112: {;lcd.c: 113:     for(int i=0
      +                          ; a[i] != '\0'; i++)
  3087  0478  01A3               	clrf	lcd_write_string@i
  3088  0479  01A4               	clrf	lcd_write_string@i+1
  3089  047A  2C90               	goto	l1965
  3090  047B                     l1961:
  3091                           
  3092                           ;lcd.c: 114:     {;lcd.c: 115:        lcd_write_char(a[i]);
  3093  047B  0823               	movf	lcd_write_string@i,w
  3094  047C  0722               	addwf	lcd_write_string@a,w
  3095  047D  0084               	movwf	4
  3096  047E  120A  118A  2441  120A  118A  	fcall	stringdir
  3097  0483  120A  118A  24D9  120A  118A  	fcall	_lcd_write_char
  3098  0488                     l1963:
  3099                           
  3100                           ;lcd.c: 116:     }
  3101  0488  3001               	movlw	1
  3102  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3103  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3104  048B  07A3               	addwf	lcd_write_string@i,f
  3105  048C  1803               	skipnc
  3106  048D  0AA4               	incf	lcd_write_string@i+1,f
  3107  048E  3000               	movlw	0
  3108  048F  07A4               	addwf	lcd_write_string@i+1,f
  3109  0490                     l1965:
  3110  0490  0823               	movf	lcd_write_string@i,w
  3111  0491  0722               	addwf	lcd_write_string@a,w
  3112  0492  0084               	movwf	4
  3113  0493  120A  118A  2441  120A  118A  	fcall	stringdir
  3114  0498  3A00               	xorlw	0
  3115  0499  1D03               	skipz
  3116  049A  2C9C               	goto	u1091
  3117  049B  2C9D               	goto	u1090
  3118  049C                     u1091:
  3119  049C  2C7B               	goto	l1961
  3120  049D                     u1090:
  3121  049D                     l161:
  3122  049D  0008               	return
  3123  049E                     __end_of_lcd_write_string:
  3124                           
  3125                           	psect	text17
  3126  04D9                     __ptext17:	
  3127 ;; *************** function _lcd_write_char *****************
  3128 ;; Defined at:
  3129 ;;		line 101 in file "lcd.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  data            1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  data            1    5[COMMON] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         1       0       0       0       0
  3145 ;;      Temps:          0       2       0       0       0
  3146 ;;      Totals:         1       2       0       0       0
  3147 ;;Total ram usage:        3 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    2
  3150 ;; This function calls:
  3151 ;;		_lcd_port
  3152 ;; This function is called by:
  3153 ;;		_display
  3154 ;;		_lcd_write_string
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _lcd_write_char
  3160  04D9                     _lcd_write_char:
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  3164                           ;lcd_write_char@data stored from wreg
  3165  04D9  00F5               	movwf	lcd_write_char@data
  3166  04DA                     l1801:
  3167                           
  3168                           ;lcd.c: 101: void lcd_write_char(uint8_t data);lcd.c: 102: {;lcd.c: 103:     PORTEbits.R
      +                          E0 = 1;
  3169  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3170  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3171  04DC  1409               	bsf	9,0	;volatile
  3172  04DD                     l1803:
  3173                           
  3174                           ;lcd.c: 104:     lcd_port(data);
  3175  04DD  0875               	movf	lcd_write_char@data,w
  3176  04DE  120A  118A  257E  120A  118A  	fcall	_lcd_port
  3177  04E3                     l1805:
  3178                           
  3179                           ;lcd.c: 106:     PORTEbits.RE2 = 1;
  3180  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3181  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3182  04E5  1509               	bsf	9,2	;volatile
  3183  04E6                     l1807:
  3184                           
  3185                           ;lcd.c: 107:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3186  04E6  3006               	movlw	6
  3187  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3188  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3189  04E9  00A1               	movwf	??_lcd_write_char+1
  3190  04EA  302F               	movlw	47
  3191  04EB  00A0               	movwf	??_lcd_write_char
  3192  04EC                     u1207:
  3193  04EC  0BA0               	decfsz	??_lcd_write_char,f
  3194  04ED  2CEC               	goto	u1207
  3195  04EE  0BA1               	decfsz	??_lcd_write_char+1,f
  3196  04EF  2CEC               	goto	u1207
  3197  04F0  2CF1               	nop2
  3198  04F1                     l1809:
  3199                           
  3200                           ;lcd.c: 108:     PORTEbits.RE2 = 0;
  3201  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3202  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3203  04F3  1109               	bcf	9,2	;volatile
  3204  04F4                     l155:
  3205  04F4  0008               	return
  3206  04F5                     __end_of_lcd_write_char:
  3207                           
  3208                           	psect	text18
  3209  04BC                     __ptext18:	
  3210 ;; *************** function _lcd_move_cursor *****************
  3211 ;; Defined at:
  3212 ;;		line 89 in file "lcd.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  row             1    wreg     unsigned char 
  3215 ;;  col             1    2[BANK0 ] unsigned char 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  row             1    3[BANK0 ] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       1       0       0       0
  3228 ;;      Locals:         0       1       0       0       0
  3229 ;;      Temps:          0       0       0       0       0
  3230 ;;      Totals:         0       2       0       0       0
  3231 ;;Total ram usage:        2 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    3
  3234 ;; This function calls:
  3235 ;;		_lcd_cmd
  3236 ;; This function is called by:
  3237 ;;		_display
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _lcd_move_cursor
  3243  04BC                     _lcd_move_cursor:
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in _lcd_move_cursor: [wreg+status,2+status,0+pclath+cstack]
  3247                           ;lcd_move_cursor@row stored from wreg
  3248  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3249  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3250  04BE  00A3               	movwf	lcd_move_cursor@row
  3251  04BF                     l1951:
  3252                           
  3253                           ;lcd.c: 89: void lcd_move_cursor(uint8_t row, uint8_t col);lcd.c: 90: {;lcd.c: 91:     i
      +                          f(row == 0)
  3254  04BF  0823               	movf	lcd_move_cursor@row,w
  3255  04C0  1D03               	btfss	3,2
  3256  04C1  2CC3               	goto	u1071
  3257  04C2  2CC4               	goto	u1070
  3258  04C3                     u1071:
  3259  04C3  2CCC               	goto	l1955
  3260  04C4                     u1070:
  3261  04C4                     l1953:
  3262                           
  3263                           ;lcd.c: 92:     {;lcd.c: 93:         lcd_cmd(0x80 + col);
  3264  04C4  0822               	movf	lcd_move_cursor@col,w
  3265  04C5  3E80               	addlw	128
  3266  04C6  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  3267                           
  3268                           ;lcd.c: 94:     }
  3269  04CB  2CD8               	goto	l152
  3270  04CC                     l1955:
  3271  04CC  0323               	decf	lcd_move_cursor@row,w
  3272  04CD  1D03               	btfss	3,2
  3273  04CE  2CD0               	goto	u1081
  3274  04CF  2CD1               	goto	u1080
  3275  04D0                     u1081:
  3276  04D0  2CD8               	goto	l152
  3277  04D1                     u1080:
  3278  04D1                     l1957:
  3279                           
  3280                           ;lcd.c: 96:     {;lcd.c: 97:         lcd_cmd(0xC0 + col);
  3281  04D1  0822               	movf	lcd_move_cursor@col,w
  3282  04D2  3EC0               	addlw	192
  3283  04D3  120A  118A  24F5  120A  118A  	fcall	_lcd_cmd
  3284  04D8                     l152:
  3285  04D8  0008               	return
  3286  04D9                     __end_of_lcd_move_cursor:
  3287                           
  3288                           	psect	text19
  3289  04F5                     __ptext19:	
  3290 ;; *************** function _lcd_cmd *****************
  3291 ;; Defined at:
  3292 ;;		line 72 in file "lcd.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  cmd             1    wreg     unsigned char 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  cmd             1    5[COMMON] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       0       0       0       0
  3307 ;;      Locals:         1       0       0       0       0
  3308 ;;      Temps:          0       2       0       0       0
  3309 ;;      Totals:         1       2       0       0       0
  3310 ;;Total ram usage:        3 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    2
  3313 ;; This function calls:
  3314 ;;		_lcd_port
  3315 ;; This function is called by:
  3316 ;;		_setup
  3317 ;;		_lcd_init
  3318 ;;		_lcd_move_cursor
  3319 ;;		_lcd_clear
  3320 ;;		_lcd_shift_right
  3321 ;;		_lcd_shift_left
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _lcd_cmd
  3327  04F5                     _lcd_cmd:
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3331                           ;lcd_cmd@cmd stored from wreg
  3332  04F5  00F5               	movwf	lcd_cmd@cmd
  3333  04F6                     l1811:
  3334                           
  3335                           ;lcd.c: 72: void lcd_cmd(uint8_t cmd);lcd.c: 73: {;lcd.c: 74:     PORTEbits.RE0 = 0;
  3336  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3337  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3338  04F8  1009               	bcf	9,0	;volatile
  3339  04F9                     l1813:
  3340                           
  3341                           ;lcd.c: 75:     lcd_port(cmd);
  3342  04F9  0875               	movf	lcd_cmd@cmd,w
  3343  04FA  120A  118A  257E  120A  118A  	fcall	_lcd_port
  3344  04FF                     l1815:
  3345                           
  3346                           ;lcd.c: 77:     PORTEbits.RE2 = 1;
  3347  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0501  1509               	bsf	9,2	;volatile
  3350  0502                     l1817:
  3351                           
  3352                           ;lcd.c: 78:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3353  0502  3006               	movlw	6
  3354  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0505  00A1               	movwf	??_lcd_cmd+1
  3357  0506  302F               	movlw	47
  3358  0507  00A0               	movwf	??_lcd_cmd
  3359  0508                     u1217:
  3360  0508  0BA0               	decfsz	??_lcd_cmd,f
  3361  0509  2D08               	goto	u1217
  3362  050A  0BA1               	decfsz	??_lcd_cmd+1,f
  3363  050B  2D08               	goto	u1217
  3364  050C  2D0D               	nop2
  3365  050D                     l1819:
  3366                           
  3367                           ;lcd.c: 79:     PORTEbits.RE2 = 0;
  3368  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3369  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3370  050F  1109               	bcf	9,2	;volatile
  3371  0510                     l143:
  3372  0510  0008               	return
  3373  0511                     __end_of_lcd_cmd:
  3374                           
  3375                           	psect	text20
  3376  057E                     __ptext20:	
  3377 ;; *************** function _lcd_port *****************
  3378 ;; Defined at:
  3379 ;;		line 24 in file "lcd.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  a               1    wreg     unsigned char 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  a               1    4[COMMON] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         1       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0
  3396 ;;      Totals:         1       0       0       0       0
  3397 ;;Total ram usage:        1 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_lcd_init
  3404 ;;		_lcd_cmd
  3405 ;;		_lcd_write_char
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _lcd_port
  3411  057E                     _lcd_port:
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _lcd_port: [wreg]
  3415                           ;lcd_port@a stored from wreg
  3416  057E  00F4               	movwf	lcd_port@a
  3417  057F                     l1799:
  3418                           
  3419                           ;lcd.c: 24: void lcd_port(uint8_t a);lcd.c: 25: {;lcd.c: 27:     PORTD = a;
  3420  057F  0874               	movf	lcd_port@a,w
  3421  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0582  0088               	movwf	8	;volatile
  3424  0583                     l140:
  3425  0583  0008               	return
  3426  0584                     __end_of_lcd_port:
  3427                           
  3428                           	psect	text21
  3429  03C0                     __ptext21:	
  3430 ;; *************** function _isr *****************
  3431 ;; Defined at:
  3432 ;;		line 120 in file "proyecto.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0
  3448 ;;      Temps:          4       0       0       0       0
  3449 ;;      Totals:         4       0       0       0       0
  3450 ;;Total ram usage:        4 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		Interrupt level 1
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _isr
  3461  03C0                     _isr:
  3462  03C0                     i1l1741:
  3463                           
  3464                           ;proyecto.c: 123:     if (PIE1bits.TXIE && PIR1bits.TXIF)
  3465  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  3466  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  3467  03C2  1E0C               	btfss	12,4	;volatile
  3468  03C3  2BC5               	goto	u78_21
  3469  03C4  2BC6               	goto	u78_20
  3470  03C5                     u78_21:
  3471  03C5  2BF3               	goto	i1l1759
  3472  03C6                     u78_20:
  3473  03C6                     i1l1743:
  3474  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3475  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3476  03C8  1E0C               	btfss	12,4	;volatile
  3477  03C9  2BCB               	goto	u79_21
  3478  03CA  2BCC               	goto	u79_20
  3479  03CB                     u79_21:
  3480  03CB  2BF3               	goto	i1l1759
  3481  03CC                     u79_20:
  3482  03CC                     i1l1745:
  3483                           
  3484                           ;proyecto.c: 124:     {;proyecto.c: 125:         if (eusart_flag)
  3485  03CC  0876               	movf	_eusart_flag,w
  3486  03CD  1903               	btfsc	3,2
  3487  03CE  2BD0               	goto	u80_21
  3488  03CF  2BD1               	goto	u80_20
  3489  03D0                     u80_21:
  3490  03D0  2BD8               	goto	i1l1749
  3491  03D1                     u80_20:
  3492  03D1                     i1l1747:
  3493                           
  3494                           ;proyecto.c: 126:         {;proyecto.c: 127:             TXREG = str_pot_a[str_pos];
  3495  03D1  0877               	movf	_str_pos,w
  3496  03D2  3E4A               	addlw	(low (_str_pot_a| 0))& (0+255)
  3497  03D3  0084               	movwf	4
  3498  03D4  1383               	bcf	3,7	;select IRP bank0
  3499  03D5  0800               	movf	0,w
  3500  03D6  0099               	movwf	25	;volatile
  3501                           
  3502                           ;proyecto.c: 128:         }
  3503  03D7  2BDE               	goto	i1l1751
  3504  03D8                     i1l1749:
  3505                           
  3506                           ;proyecto.c: 130:         {;proyecto.c: 131:             TXREG = str_pot_b[str_pos];
  3507  03D8  0877               	movf	_str_pos,w
  3508  03D9  3E50               	addlw	(low (_str_pot_b| 0))& (0+255)
  3509  03DA  0084               	movwf	4
  3510  03DB  1383               	bcf	3,7	;select IRP bank0
  3511  03DC  0800               	movf	0,w
  3512  03DD  0099               	movwf	25	;volatile
  3513  03DE                     i1l1751:
  3514                           
  3515                           ;proyecto.c: 133:         str_pos++;
  3516  03DE  3001               	movlw	1
  3517  03DF  00F0               	movwf	??_isr
  3518  03E0  0870               	movf	??_isr,w
  3519  03E1  07F7               	addwf	_str_pos,f
  3520  03E2                     i1l1753:
  3521                           
  3522                           ;proyecto.c: 135:         if (str_pos == 5)
  3523  03E2  3005               	movlw	5
  3524  03E3  0677               	xorwf	_str_pos,w
  3525  03E4  1D03               	btfss	3,2
  3526  03E5  2BE7               	goto	u81_21
  3527  03E6  2BE8               	goto	u81_20
  3528  03E7                     u81_21:
  3529  03E7  2BF3               	goto	i1l1759
  3530  03E8                     u81_20:
  3531  03E8                     i1l1755:
  3532                           
  3533                           ;proyecto.c: 136:         {;proyecto.c: 137:             eusart_flag = !eusart_flag;
  3534  03E8  0876               	movf	_eusart_flag,w
  3535  03E9  1903               	btfsc	3,2
  3536  03EA  2BEC               	goto	u82_21
  3537  03EB  2BEE               	goto	u82_20
  3538  03EC                     u82_21:
  3539  03EC  3001               	movlw	1
  3540  03ED  2BEF               	goto	u83_20
  3541  03EE                     u82_20:
  3542  03EE  3000               	movlw	0
  3543  03EF                     u83_20:
  3544  03EF  00F0               	movwf	??_isr
  3545  03F0  0870               	movf	??_isr,w
  3546  03F1  00F6               	movwf	_eusart_flag
  3547  03F2                     i1l1757:
  3548                           
  3549                           ;proyecto.c: 138:             str_pos = 0;
  3550  03F2  01F7               	clrf	_str_pos
  3551  03F3                     i1l1759:
  3552                           
  3553                           ;proyecto.c: 142:     if (PIR1bits.RCIF)
  3554  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3555  03F4  1E8C               	btfss	12,5	;volatile
  3556  03F5  2BF7               	goto	u84_21
  3557  03F6  2BF8               	goto	u84_20
  3558  03F7                     u84_21:
  3559  03F7  2BFC               	goto	i1l118
  3560  03F8                     u84_20:
  3561  03F8                     i1l1761:
  3562                           
  3563                           ;proyecto.c: 143:     {;proyecto.c: 144:         uart_data = RCREG;
  3564  03F8  081A               	movf	26,w	;volatile
  3565  03F9  00F0               	movwf	??_isr
  3566  03FA  0870               	movf	??_isr,w
  3567  03FB  00C8               	movwf	_uart_data
  3568  03FC                     i1l118:
  3569  03FC  0873               	movf	??_isr+3,w
  3570  03FD  008A               	movwf	10
  3571  03FE  0872               	movf	??_isr+2,w
  3572  03FF  0084               	movwf	4
  3573  0400  0E71               	swapf	??_isr+1,w
  3574  0401  0083               	movwf	3
  3575  0402  0EFE               	swapf	btemp,f
  3576  0403  0E7E               	swapf	btemp,w
  3577  0404  0009               	retfie
  3578  0405                     __end_of_isr:
  3579  007E                     btemp	set	126	;btemp
  3580  007E                     wtemp0	set	126
  3581                           
  3582                           	psect	intentry
  3583  0004                     __pintentry:	
  3584                           ;incstack = 0
  3585                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  3586                           
  3587  0004                     interrupt_function:
  3588  007E                     saved_w	set	btemp
  3589  0004  00FE               	movwf	btemp
  3590  0005  0E03               	swapf	3,w
  3591  0006  00F1               	movwf	??_isr+1
  3592  0007  0804               	movf	4,w
  3593  0008  00F2               	movwf	??_isr+2
  3594  0009  080A               	movf	10,w
  3595  000A  00F3               	movwf	??_isr+3
  3596  000B  120A  118A  2BC0   	ljmp	_isr
  3597                           
  3598                           	psect	config
  3599                           
  3600                           ;Config register CONFIG1 @ 0x2007
  3601                           ;	Oscillator Selection bits
  3602                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3603                           ;	Watchdog Timer Enable bit
  3604                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3605                           ;	Power-up Timer Enable bit
  3606                           ;	PWRTE = OFF, PWRT disabled
  3607                           ;	RE3/MCLR pin function select bit
  3608                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3609                           ;	Code Protection bit
  3610                           ;	CP = OFF, Program memory code protection is disabled
  3611                           ;	Data Code Protection bit
  3612                           ;	CPD = OFF, Data memory code protection is disabled
  3613                           ;	Brown Out Reset Selection bits
  3614                           ;	BOREN = OFF, BOR disabled
  3615                           ;	Internal External Switchover bit
  3616                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3617                           ;	Fail-Safe Clock Monitor Enabled bit
  3618                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3619                           ;	Low Voltage Programming Enable bit
  3620                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3621                           ;	In-Circuit Debugger Mode bit
  3622                           ;	DEBUG = 0x1, unprogrammed default
  3623  2007                     	org	8199
  3624  2007  20D4               	dw	8404
  3625                           
  3626                           ;Config register CONFIG2 @ 0x2008
  3627                           ;	Brown-out Reset Selection bit
  3628                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3629                           ;	Flash Program Memory Self Write Enable bits
  3630                           ;	WRT = OFF, Write protection off
  3631  2008                     	org	8200
  3632  2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    10
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     32      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[5]), STR_2(CODE[7]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> display@str(BANK0[3]), str_pot_b(BANK0[5]), str_pot_a(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_write_string@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), 

    display@str	PTR unsigned char [3] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    str_pot_b	PTR unsigned char [5] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    str_pot_a	PTR unsigned char [6] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _setup->_lcd_cmd
    _lcd_init->_lcd_cmd
    _display->_lcd_write_char
    _sprintf->___bmul
    _sprintf->___lwmod
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->_lcd_port
    _lcd_move_cursor->_lcd_cmd
    _lcd_cmd->_lcd_port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_display
    _setup->_lcd_init
    _lcd_init->_lcd_cmd
    _display->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write_string->_lcd_write_char
    _lcd_move_cursor->_lcd_cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6385
                                             29 BANK0      3     3      0
                            _display
                              _setup
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     611
               _eusart_enable_rx_isr
               _eusart_enable_tx_isr
                     _eusart_init_rx
                     _eusart_init_tx
                            _lcd_cmd
                           _lcd_init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             2     2      0      93
                                              2 BANK0      2     2      0
                            _lcd_cmd
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _eusart_init_tx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init_rx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_tx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_rx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              4     4      0    3309
                                             25 BANK0      4     4      0
                    _lcd_move_cursor
                     _lcd_write_char
                   _lcd_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2465
                                             12 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_write_string                                     3     3      0     228
                                              2 BANK0      3     3      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     3      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1     366
                                              2 BANK0      2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (3) _lcd_port                                             1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _lcd_move_cursor
       _lcd_cmd
         _lcd_port
     _lcd_write_char
       _lcd_port
     _lcd_write_string
       _lcd_write_char
         _lcd_port
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
   _setup
     _eusart_enable_rx_isr
     _eusart_enable_tx_isr
     _eusart_init_rx
     _eusart_init_tx
     _lcd_cmd
       _lcd_port
     _lcd_init
       _lcd_cmd
         _lcd_port
       _lcd_port
     _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:36:04 2021

                            pc 0002                 ___bmul@product 0020                    _SSPSTATbits 0094  
                           _ss 0040                             fsr 0004                            l121 02D1  
                          l140 0583                            l124 0379                            l220 0571  
                          l213 04B6                            l214 04BB                            l143 0510  
                          l231 0562                            l152 04D8                            l161 049D  
                          l137 0328                            l217 056B                            l155 04F4  
                          l182 0559                            l191 054A                            l352 0186  
                          l185 0577                            l194 057D                            l382 0527  
                          l628 03BF                            l638 0440                            l809 0539  
                          u430 0530                            u431 052F                            u440 0536  
                          u441 0535                            u540 040D                            u541 040C  
                          u560 041F                            u561 041E                            u570 0429  
                          u571 0428                            u555 0411                            u910 03A7  
                          u590 043C                            u911 03A6                            u591 043B  
                          u575 0425                            u905 0397                            u585 0430  
                          u850 0519                            u930 03BB                            u770 0571  
                          u851 0518                            u931 03BA                            u915 03A3  
                          u771 0570                            u860 0526                            u940 0030  
                          u861 0525                            u925 03AF                            u941 002F  
                          u870 0384                            u950 0049                            u871 0383  
                          u951 0048                            u960 007F                            u961 007E  
                          u890 0396                            u970 00B0                            u891 0395  
                          u971 00AF                            u980 00BE                            u885 0388  
                          u981 00BD                            u990 00C4                            u991 00C3  
                          _isr 03C0                            fsr0 0004                            indf 0000  
                         l2001 033A                           l2011 0341                           l2003 033B  
                         l2021 0347                           l2013 0342                           l2005 033C  
                         l2101 01B2                           l2031 034F                           l2023 0348  
                         l2015 0343                           l2007 033F                           l2111 01D9  
                         l2103 01B5                           l2041 0369                           l2033 0354  
                         l2025 0349                           l2017 0345                           l2009 0340  
                         l2121 020F                           l2113 01DA                           l2105 01C1  
                         l2051 0241                           l2043 036E                           l2035 035A  
                         l2027 034A                           l2019 0346                           l2123 0223  
                         l2115 01E5                           l2107 01CB                           l1421 041B  
                         l1413 0405                           l2061 026F                           l2053 024A  
                         l2037 035F                           l2029 034E                           l2125 0228  
                         l2117 01FA                           l2109 01D6                           l1423 041F  
                         l1415 040D                           l1431 043C                           l2071 0293  
                         l2063 0277                           l2055 0259                           l2047 0232  
                         l2039 0364                           l2119 01FD                           l1425 0429  
                         l1417 0410                           l1361 0529                           l2081 02B9  
                         l2073 029B                           l2065 027F                           l2057 0261  
                         l2049 023B                           l1427 042F                           l1419 0417  
                         l1363 052A                           l2163 0095                           l2083 02C1  
                         l2075 02A3                           l2067 0285                           l2059 0267  
                         l2091 018F                           l1429 0436                           l1365 0530  
                         l2085 02C9                           l2077 02AB                           l2069 028D  
                         l2093 0190                           l1367 0536                           l2079 02B1  
                         l1551 054B                           l2095 0191                           l2087 0187  
                         l1801 04DA                           l1369 0538                           l1561 0555  
                         l1553 054E                           l2097 0192                           l2089 018C  
                         l1811 04F6                           l1803 04DD                           l1571 053F  
                         l1563 0558                           l1555 0550                           l2099 019D  
                         l1813 04F9                           l1805 04E3                           l1821 0514  
                         l1901 00B9                           l1581 0578                           l1565 0572  
                         l1573 0540                           l1557 0551                           l1815 04FF  
                         l1807 04E6                           l1831 0526                           l1823 0515  
                         l1911 00CA                           l1903 00BE                           l1575 0541  
                         l1567 053A                           l1559 0552                           l1655 055A  
                         l1817 0502                           l1809 04F1                           l1825 0519  
                         l1841 0387                           l1921 0101                           l1905 00C4  
                         l1577 0544                           l1569 053D                           l1593 056B  
                         l1657 055F                           l1819 050D                           l1827 051D  
                         l1851 03AD                           l1843 038E                           l1835 037A  
                         l1931 012F                           l1923 0115                           l1915 00E6  
                         l1907 00C8                           l1579 0547                           l1829 051F  
                         l1853 03AE                           l1845 0392                           l1837 037E  
                         l1933 015F                           l1925 011B                           l1917 00F0  
                         l1941 0182                           l1861 0025                           l1951 04BF  
                         l1855 03B5                           l1847 0396                           l1839 0384  
                         l1927 0123                           l1919 0100                           l1871 003D  
                         l1863 002A                           l1953 04C4                           l1961 047B  
                         l1849 03A7                           l1857 03BB                           l1929 012A  
                         l1937 0167                           l1881 006B                           l1873 0049  
                         l1865 0030                           l1955 04CC                           l1963 0488  
                         l1891 00A0                           l1883 006F                           l1875 004D  
                         l1867 0037                           l1939 0170                           l1971 02E3  
                         l1957 04D1                           l1965 0490                           l1893 00A8  
                         l1877 004F                           l1885 0080                           l1869 003C  
                         l1973 02F4                           l1981 04AC                           l1799 057F  
                         l1959 0478                           l1895 00AC                           l1879 0060  
                         l1975 02FA                           l1967 02D2                           l1983 04AE  
                         l1991 0333                           l1897 00B0                           l1889 0081  
                         l1969 02D8                           l1985 04B5                           l1977 049F  
                         l1993 0334                           l1899 00B4                           l1979 04A6  
                         l1995 0335                           l1987 0329                           l1997 0338  
                         l1989 0331                           l1999 0339                           ?_isr 0070  
                         STR_1 0462                           STR_2 0469                           STR_3 0451  
                         STR_4 0470                           u1000 00E5                           u1001 00E4  
                         u1010 00F0                           u1011 00EF                           u1020 0100  
                         u1100 04A6                           u1021 00FF                           u1005 00E1  
                         u1101 04A5                           u1030 0115                           u1031 0114  
                         u1040 0123                           u1041 0122                           u1025 00FC  
                         u1050 0170                           u1051 016F                           u1035 0111  
                         u1060 0182                           u1061 0181                           u1117 0198  
                         u1070 04C4                           u1071 04C3                           u1207 04EC  
                         u1127 01AD                           u1080 04D1                           u1217 0508  
                         u1081 04D0                           u1137 01BC                           u1090 049D  
                         u1091 049C                           u1147 01D1                           _IOCB 0096  
                         u1157 01E0                           u1167 01F5                           u1177 02DE  
                         u1187 02EF                           u1197 0300                           _TMR0 0001  
       __end_of_lcd_write_char 04F5                           _cont 0049                           _main 0187  
                         btemp 007E                           start 000E              ___bmul@multiplier 0021  
             ?_lcd_move_cursor 0022                          ??_isr 0070                          ?_main 0070  
                        _ANSEL 0188                __end_of___lwdiv 03C0                          i1l118 03FC  
              __end_of___lwmod 0441                          _RCREG 001A                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          u80_20 03D1  
                        u80_21 03D0                          u81_20 03E8                          u81_21 03E7  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          u82_20 03EE  
                        u82_21 03EC                          u83_20 03EF                          u84_20 03F8  
                        u84_21 03F7                          u78_20 03C6                          u78_21 03C5  
                        u79_20 03CC                          u79_21 03CB                          _TXREG 0019  
              __end_of_lcd_cmd 0511                __end_of_display 02D2                __end_of_dpowers 0451  
              __end_of_isdigit 053A                          _setup 0329                          pclath 000A  
              __end_of_spiInit 04BC                __end_of_spiRead 0563                ?_lcd_write_char 0070  
                        status 0003                          wtemp0 007E                __end_of_sprintf 0187  
             ??_eusart_init_rx 0074               ??_eusart_init_tx 0074                __initialization 0011  
 __end_of_eusart_enable_rx_isr 057E   __end_of_eusart_enable_tx_isr 0578                   __end_of_main 0232  
                       ??_main 003D                         ?_setup 0070                         _ANSELH 0189  
                       i1l1741 03C0                         i1l1751 03DE                         i1l1743 03C6  
                       i1l1761 03F8                         i1l1753 03E2                         i1l1745 03CC  
                       i1l1755 03E8                         i1l1747 03D1                         i1l1757 03F2  
                       i1l1749 03D8                         i1l1759 03F3                         _OSCCON 008F  
                       _SPBRGH 009A                         _TRISC3 043B                         _TRISC5 043D  
                       _SSPCON 0014                         _SSPBUF 0013               __end_of_lcd_init 0329  
             __end_of_lcd_port 0584                         ___bmul 0511                      ??___lwdiv 0074  
                    ??___lwmod 0075       __end_of_lcd_write_string 049E                      ??_lcd_cmd 0020  
                    ??_display 0039                      ??_isdigit 0074                         saved_w 007E  
                    ??_spiInit 0074                      ??_spiRead 0074                      ??_sprintf 002F  
            lcd_write_string@a 0022              lcd_write_string@i 0023        __end_of__initialization 001E  
          ___bmul@multiplicand 0074                 __pcstackCOMMON 0070                  __end_of_setup 037A  
               _OPTION_REGbits 0081           _eusart_enable_rx_isr 0578           _eusart_enable_tx_isr 0572  
                      ??_setup 0076                     __pbssBANK0 0040                     __pmaintext 0187  
                      ?___bmul 0074                     __pintentry 0004        __size_of_spiReceiveWait 0007  
             ??_lcd_write_char 0020          ?_eusart_enable_rx_isr 0070          ?_eusart_enable_tx_isr 0070  
                    ?_lcd_init 0070                        _SSPSTAT 0094                      ?_lcd_port 0070  
                   __stringtab 0441             lcd_write_char@data 0075                __size_of___bmul 0017  
                      ___lwdiv 037A                        _ban_an1 0044                        _ban_an2 0042  
                      ___lwmod 0405                        __ptext1 055A                        __ptext2 056B  
                      __ptext3 0329                        __ptext4 049E                        __ptext5 02D2  
                      __ptext6 054B                        __ptext7 053A                        __ptext8 0572  
                      __ptext9 0578                        _lcd_cmd 04F5       __size_of_lcd_move_cursor 001D  
                      _display 0232                        _dpowers 0447                        _isdigit 0528  
                 __size_of_isr 0045                        _spiInit 049E                        _spiRead 055A  
                      _sprintf 0022                        clrloop0 0564                     ??_lcd_init 0022  
                      _str_pos 0077                     ??_lcd_port 0074           end_of_initialization 001E  
                    _RCSTAbits 0018                      _PORTAbits 0005              ?_lcd_write_string 0070  
                    _PORTEbits 0009             ??_lcd_write_string 0076         ??_eusart_enable_rx_isr 0074  
       ??_eusart_enable_tx_isr 0074                     lcd_cmd@cmd 0075                      _TXSTAbits 0098  
                   display@str 003A                 _spiReceiveWait 056B                 __end_of___bmul 0528  
      __size_of_eusart_init_rx 0011        __size_of_eusart_init_tx 000F            start_initialization 0011  
                  __end_of_isr 0405              ??_lcd_move_cursor 0076         __end_of_spiReceiveWait 0572  
                     ??___bmul 0075                    __pbssCOMMON 0076                      ___latbits 0002  
                __pcstackBANK0 0020                      _adc_data1 0079                      _adc_data2 0078  
                 _isdigit$1071 0074              __size_of_lcd_init 0057                    sprintf@flag 0033  
            __size_of_lcd_port 0006                    sprintf@prec 0037               ___lwdiv@dividend 0022  
              ?_spiReceiveWait 0070                       ?___lwdiv 0020                       ?___lwmod 0027  
                    __pstrings 0441                       ?_lcd_cmd 0070                       ?_display 0070  
                     ?_isdigit 0070             lcd_move_cursor@col 0022             lcd_move_cursor@row 0023  
                     ?_spiInit 0020                       ?_spiRead 0070               ___lwdiv@quotient 0025  
                     ?_sprintf 002C                 __size_of_setup 0051           spiInit@sTransmitEdge 0022  
            interrupt_function 0004                      clear_ram0 0563                       _PIE1bits 008C  
           spiInit@sDataSample 0020                       _PIR1bits 000C                      _uart_data 0048  
                    _uart_cont 0047                 _eusart_init_rx 053A                 _eusart_init_tx 054B  
                  __stringbase 0446                      lcd_port@a 0074                      _str_pot_a 004A  
                    _str_pot_b 0050      __size_of_lcd_write_string 0029        __size_of_lcd_write_char 001C  
       __end_of_eusart_init_rx 054B         __end_of_eusart_init_tx 055A               __size_of___lwdiv 0046  
             __size_of___lwmod 003C                _lcd_move_cursor 04BC                       _adc_flag 0046  
           __end_of__stringtab 0447               __size_of_lcd_cmd 001C               __size_of_display 00A0  
                   sprintf@val 0034               __size_of_isdigit 0012                ___lwdiv@divisor 0020  
              ___lwdiv@counter 0024                       __ptext10 0232                       __ptext11 0022  
                     __ptext20 057E                       __ptext12 0528                       __ptext21 03C0  
                     __ptext13 0405                       __ptext14 037A                       __ptext15 0511  
                     __ptext16 0475                       __ptext17 04D9                       __ptext18 04BC  
                     __ptext19 04F5               __size_of_spiInit 001E               __size_of_spiRead 0009  
__size_of_eusart_enable_rx_isr 0006                       _lcd_init 02D2  __size_of_eusart_enable_tx_isr 0006  
                  _eusart_flag 0076                       _lcd_port 057E               __size_of_sprintf 0165  
                __size_of_main 00AB                ?_eusart_init_rx 0070                ?_eusart_init_tx 0070  
                 spiInit@sType 0074              spiInit@sClockIdle 0021                     _INTCONbits 000B  
                     isdigit@c 0075                       intlevel1 0000                      sprintf@ap 0032  
                    sprintf@sp 0036               ___lwmod@dividend 0029               ??_spiReceiveWait 0074  
                    stringcode 0441        __end_of_lcd_move_cursor 04D9                       sprintf@c 0038  
                     sprintf@f 002C                ___lwmod@divisor 0027                ___lwmod@counter 002B  
                     stringdir 0441                       stringtab 0441               _lcd_write_string 0475  
               _lcd_write_char 04D9  
